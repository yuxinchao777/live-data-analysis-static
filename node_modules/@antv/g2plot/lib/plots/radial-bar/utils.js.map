{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/plots/radial-bar/utils.ts"],"names":[],"mappings":";;;AAEA,SAAgB,WAAW,CAAC,QAAgB,EAAE,MAAc,EAAE,IAAU;IACtE,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,CAAC,EAAZ,CAAY,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,KAAK,SAAS,EAAf,CAAe,CAAC,CAAC;IAC9E,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;IAC9C,IAAI,CAAC,YAAY,EAAE;QACjB,OAAO,QAAQ,CAAC;KACjB;IACD,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,YAAY,CAAC;AACzC,CAAC;AARD,kCAQC","sourcesContent":["import { Data } from '../../types';\n\nexport function getScaleMax(maxAngle: number, yField: string, data: Data): number {\n  const yData = data.map((item) => item[yField]).filter((v) => v !== undefined);\n  const maxValue = yData.length > 0 ? Math.max(...yData) : 0;\n  const formatRadian = Math.abs(maxAngle) % 360;\n  if (!formatRadian) {\n    return maxValue;\n  }\n  return (maxValue * 360) / formatRadian;\n}\n"]}