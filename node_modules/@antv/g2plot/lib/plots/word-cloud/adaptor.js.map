{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/word-cloud/adaptor.ts"],"names":[],"mappings":";;;AACA,+CAAoG;AACpG,qCAA+C;AAC/C,uDAAiD;AAEjD,iCAAoC;AAEpC;;;GAGG;AACH,SAAS,QAAQ,CAAC,MAAgC;IACxC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,UAAU,GAAY,OAAO,WAAnB,EAAE,KAAK,GAAK,OAAO,MAAZ,CAAa;IACtC,IAAM,IAAI,GAAG,iBAAS,CAAC,MAAM,CAAC,CAAC;IAE/B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEjB,IAAM,CAAC,GAAG,kBAAU,CAAC,EAAE,EAAE,MAAM,EAAE;QAC/B,OAAO,EAAE;YACP,MAAM,EAAE,GAAG;YACX,MAAM,EAAE,GAAG;YACX,WAAW,EAAE,UAAU,IAAI,OAAO;YAClC,KAAK,EAAE;gBACL,KAAK,OAAA;gBACL,KAAK,EAAE,YAAY;aACpB;SACF;KACF,CAAC,CAAC;IAEK,IAAA,GAAG,GAAK,kBAAK,CAAC,CAAC,CAAC,IAAb,CAAc;IACzB,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAChC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAElB,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;GAGG;AACH,SAAS,IAAI,CAAC,MAAgC;IAC5C,OAAO,YAAI,CACT,cAAK,CAAC;QACJ,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;QAClB,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;KACnB,CAAC,CACH,CAAC,MAAM,CAAC,CAAC;AACZ,CAAC;AAED;;;;GAIG;AACH,SAAgB,OAAO,CAAC,MAAgC;IACtD,0BAA0B;IAC1B,YAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,gBAAO,EAAE,eAAM,EAAE,oBAAW,EAAE,kBAAS,EAAE,cAAK,EAAE,cAAK,CAAC,CAAC,MAAM,CAAC,CAAC;AACtF,CAAC;AAHD,0BAGC","sourcesContent":["import { Params } from '../../core/adaptor';\nimport { tooltip, interaction, animation, theme, scale, state, legend } from '../../adaptor/common';\nimport { flow, deepAssign } from '../../utils';\nimport { point } from '../../adaptor/geometries';\nimport { WordCloudOptions } from './types';\nimport { transform } from './utils';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<WordCloudOptions>): Params<WordCloudOptions> {\n  const { chart, options } = params;\n  const { colorField, color } = options;\n  const data = transform(params);\n\n  chart.data(data);\n\n  const p = deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField && 'color',\n      point: {\n        color,\n        shape: 'word-cloud',\n      },\n    },\n  });\n\n  const { ext } = point(p);\n  ext.geometry.label(false);\n\n  chart.coordinate().reflect('y');\n  chart.axis(false);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<WordCloudOptions>): Params<WordCloudOptions> {\n  return flow(\n    scale({\n      x: { nice: false },\n      y: { nice: false },\n    })\n  )(params);\n}\n\n/**\n * 词云图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<WordCloudOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(geometry, meta, tooltip, legend, interaction, animation, theme, state)(params);\n}\n"]}