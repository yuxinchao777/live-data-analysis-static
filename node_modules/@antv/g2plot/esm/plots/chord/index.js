import { __extends } from "tslib";
import { each } from '@antv/util';
import { Plot } from '../../core/plot';
import { getAllElementsRecursively } from '../../utils';
import { adaptor } from './adaptor';
import { DEFAULT_OPTIONS } from './constant';
/**
 *  弦图 Chord
 */
var Chord = /** @class */ (function (_super) {
    __extends(Chord, _super);
    function Chord() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 图表类型 */
        _this.type = 'chord';
        return _this;
    }
    /**
     * 获取 面积图 默认配置项
     * 供外部使用
     */
    Chord.getDefaultOptions = function () {
        return DEFAULT_OPTIONS;
    };
    /**
     * @override
     * 设置状态
     * @param type 状态类型，支持 'active' | 'inactive' | 'selected' 三种
     * @param conditions 条件，支持数组
     * @param status 是否激活，默认 true
     */
    Chord.prototype.setState = function (type, condition, status) {
        if (status === void 0) { status = true; }
        var elements = getAllElementsRecursively(this.chart);
        each(elements, function (ele) {
            if (condition(ele.getData())) {
                ele.setState(type, status);
            }
        });
    };
    /**
     * @override
     * 获取状态
     */
    Chord.prototype.getStates = function () {
        var elements = getAllElementsRecursively(this.chart);
        var stateObjects = [];
        each(elements, function (element) {
            var data = element.getData();
            var states = element.getStates();
            each(states, function (state) {
                stateObjects.push({ data: data, state: state, geometry: element.geometry, element: element });
            });
        });
        return stateObjects;
    };
    Chord.prototype.getDefaultOptions = function () {
        return Chord.getDefaultOptions();
    };
    /**
     * 获取适配器
     */
    Chord.prototype.getSchemaAdaptor = function () {
        return adaptor;
    };
    return Chord;
}(Plot));
export { Chord };
//# sourceMappingURL=index.js.map