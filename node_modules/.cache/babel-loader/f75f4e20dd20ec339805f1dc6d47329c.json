{"remainingRequest":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js!/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamember.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamember.vue","mtime":1635854526355},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1626939577610},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1626939590555}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGF4aW9zIH0gZnJvbSAnQC91dGlscy9yZXF1ZXN0JzsKaW1wb3J0IHsgbWV0aG9kIH0gZnJvbSAnbG9kYXNoJzsKdmFyIGNvbHVtbnMgPSBbewogIHRpdGxlOiAnaWQnLAogIHdpZHRoOiAzMCwKICBkYXRhSW5kZXg6ICdpZCcsCiAga2V5OiAnaWQnCn0sIHsKICB0aXRsZTogJ+Wnk+WQjScsCiAgd2lkdGg6IDMwLAogIGRhdGFJbmRleDogJ25hbWUnLAogIGtleTogJ25hbWUnCn0sIHsKICB0aXRsZTogJ+adg+mHjScsCiAgd2lkdGg6IDMwLAogIGRhdGFJbmRleDogJ29yZGVySWQnLAogIGtleTogJ29yZGVySWQnCn0sIHsKICB0aXRsZTogJ+WIl+ihqOaYvuekuicsCiAgd2lkdGg6IDMwLAogIGRhdGFJbmRleDogJ3VzZXJUeXBlJywKICBrZXk6ICd1c2VyVHlwZScKfSwgewogIHRpdGxlOiAn5pON5L2cJywKICBrZXk6ICd0YXNrRGV0YWlsJywKICB3aWR0aDogMjUwLAogIHNjb3BlZFNsb3RzOiB7CiAgICBjdXN0b21SZW5kZXI6ICdhY3Rpb24nCiAgfQp9XTsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2x1bW5zOiBjb2x1bW5zLAogICAgICBxYWRhdGE6IFtdLAogICAgICB2aXNpYmxlOiBmYWxzZSwKICAgICAgbW9kZWxpZDogIiIsCiAgICAgIG1vZGVsb3JkZXI6ICIiLAogICAgICBtb2RlbG5hbWU6ICIiLAogICAgICBtb2RlbHVzZXJUeXBlOiB0cnVlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdGhpcy5nZXRtZW1iZXJkYXRhKCk7CiAgICB9LAogICAgZ2V0bWVtYmVyZGF0YTogZnVuY3Rpb24gZ2V0bWVtYmVyZGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsKICAgICAgdmFyIHBhcmFtcyA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBwYXJhbXMuYXBwZW5kKCJEZXBhcnRtZW50IiwgInFhIik7CiAgICAgIGF4aW9zLnBvc3QoJy9xdWVyeUVtcGxveWVlJywgcGFyYW1zLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICBfdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICBpZiAoaXRlbS51c2VyVHlwZSA9PT0gIjEiKSB7CiAgICAgICAgICAgICAgaXRlbS51c2VyVHlwZSA9ICLmmK8iOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGl0ZW0udXNlclR5cGUgPSAi5ZCmIjsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICBfdGhpcy5xYWRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgX3RoaXMuaXNMb2FkaW5nID0gZmFsc2U7CgogICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCflhoXnvZHmlbDmja7ojrflj5blpLHotKUnKTsKICAgICAgfSk7CiAgICB9LAogICAgc2hvd01vZGFsOiBmdW5jdGlvbiBzaG93TW9kYWwoaWQsIG5hbWUsIHVzZXJUeXBlLCBvcmRlcikgewogICAgICB0aGlzLm1vZGVsaWQgPSBpZDsKICAgICAgdGhpcy5tb2RlbG5hbWUgPSBuYW1lOwogICAgICB0aGlzLm1vZGVsb3JkZXIgPSBvcmRlcjsKCiAgICAgIGlmICh1c2VyVHlwZSA9PT0gIuaYryIpIHsKICAgICAgICB0aGlzLm1vZGVsdXNlclR5cGUgPSAxOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMubW9kZWx1c2VyVHlwZSA9IDA7CiAgICAgIH0KCiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZSA9ICIiOwogICAgICB0aGlzLnZpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGhhbmRsZU9rOiBmdW5jdGlvbiBoYW5kbGVPaygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgcGFyYW1zID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIHBhcmFtcy5hcHBlbmQoImlkIiwgdGhpcy5tb2RlbGlkKTsKICAgICAgcGFyYW1zLmFwcGVuZCgib3JkZXJJZCIsIHRoaXMubW9kZWxvcmRlcik7CiAgICAgIHBhcmFtcy5hcHBlbmQoInVzZXJUeXBlIiwgTnVtYmVyKHRoaXMubW9kZWx1c2VyVHlwZSkpOwogICAgICBheGlvcy5wb3N0KCcvZWRpdEVtcGxveWVlJywgcGFyYW1zLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2Uuc3VjY2Vzcygn5o+Q5Lqk5oiQ5YqfJyk7CgogICAgICAgICAgX3RoaXMyLnZpc2libGUgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpczIuaW5pdCgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UuZXJyb3IoJ+aPkOS6pOWksei0pScpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgX3RoaXMyLmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICBfdGhpczIuJG1lc3NhZ2UuZXJyb3IoJ+WGhee9keaVsOaNruiOt+WPluWksei0pScpOwogICAgICB9KTsKICAgIH0sCiAgICBvbkNsb3NlOiBmdW5jdGlvbiBvbkNsb3NlKCkgewogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUub3ZlcmZsb3dZID0gIm92ZXJsYXkiOwogICAgfSwKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShjaGVja2VkKSB7CiAgICAgIG1vZGVsdXNlclR5cGUgPSBjaGVja2VkOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmluaXQoKTsKICB9Cn07"},{"version":3,"sources":["qamember.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <h1>qa人员配置</h1>\n        <a-table\n      :columns=\"columns\"\n      :data-source=\"qadata\"\n      style=\"margin-top: 20px;\"\n      :loading=\"isLoading\"\n      :pagination=\"{ defaultPageSize: 100 }\"\n    >\n      <div slot=\"action\" slot-scope=\"text, record\">\n        <div>\n            <a-button type=\"primary\" @click=\"showModal(record.id,record.name,record.userType,record.orderId)\">编辑</a-button>\n        </div>\n      </div>\n    </a-table>\n    <div>\n    <a-modal v-model=\"visible\" title=\"编辑\" @ok=\"handleOk\"  :afterClose=\"onClose\">\n                <p>姓名: {{modelname}}</p>\n                <p>权重: <a-input-number\n                        placeholder=\"权重\" \n                        style=\"width:80px;\" \n                        v-model=modelorder\n                        /> </p>\n                <p>显示: <a-switch v-model=modeluserType @change=\"onChange\"  /></p>\n    </a-modal>\n    </div>\n    </div>\n</template>\n<script>\nimport { axios } from '@/utils/request'\nimport { method } from 'lodash'\n\nconst columns = [\n  { title: 'id', width: 30, dataIndex: 'id', key: 'id' },\n  { title: '姓名', width: 30, dataIndex: 'name', key: 'name' },\n  { title: '权重', width: 30, dataIndex: 'orderId', key: 'orderId' },\n  { title: '列表显示', width: 30, dataIndex: 'userType', key: 'userType' },\n  {\n    title: '操作',\n    key: 'taskDetail',\n    width: 250,\n    scopedSlots: { customRender: 'action' },\n  },\n]\n\n\nexport default {\n  data() {\n    return {\n      columns,\n      qadata:[],\n      visible: false,\n      modelid:\"\",\n      modelorder:\"\",\n      modelname:\"\",\n      modeluserType:true\n    }\n  },\n  \n  methods : {\n    init(){\n        this.getmemberdata()\n    },\n    getmemberdata(){\n        this.isLoading = true\n        let params = new FormData()\n        params.append(\"Department\",\"qa\")\n        axios\n        .post('/queryEmployee', params,{headers: {'Content-Type': 'multipart/form-data'}})\n        .then((response) => {\n          if (response.code === 200) {\n            this.isLoading = false\n            response.data.forEach(item=>{\n                if (item.userType===\"1\"){\n                    item.userType = \"是\"}\n                else{\n                    item.userType = \"否\"\n                }\n                })\n            this.qadata = response.data\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    showModal(id,name,userType,order) {\n        this.modelid = id\n        this.modelname = name\n        this.modelorder=order\n        if(userType === \"是\"){\n            this.modeluserType=1\n        }\n        else{\n            this.modeluserType=0\n        }\n\n        document.documentElement.style = \"\";\n        this.visible = true;\n    },\n    handleOk() {\n        let params = new FormData()\n        params.append(\"id\",this.modelid)\n        params.append(\"orderId\",this.modelorder)\n        params.append(\"userType\",Number(this.modeluserType))\n        axios\n        .post('/editEmployee', params,{headers: {'Content-Type': 'multipart/form-data'}})\n        .then((response) => {\n          if (response.code === 200) {\n              this.$message.success('提交成功')\n            this.visible = false;\n            this.init()\n          }\n          else{\n              this.$message.error('提交失败')\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n    onClose() {\n        document.documentElement.style.overflowY = \"overlay\";\n    },\n    onChange(checked) {\n        modeluserType = checked\n        \n    },\n    \n\n  },\n  computed: {},\n  created() {\n    this.init()\n  },\n}\n</script>\n\n<style scoped>\n\n\n</style>\n"],"sourceRoot":"src/views/qadata"}]}