{"remainingRequest":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js!/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamemberdata.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamemberdata.vue","mtime":1645167116738},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1640003217818},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1640003225539}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["qamemberdata.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"qamember-wrapper\">\n    <div>\n      <!--部门下拉框-->\n      部门<a-select default-value=\"商业QA\" style=\"width: 100px; margin-left: 5px\">\n        <a-select-option\n          v-for=\"apartment in qadata_apartment.data.apartments\"\n          :key=\"apartment.id\"\n          :value=\"apartment.name\"\n          @click=\"setapartmentid(apartment.id)\"\n        >\n          {{ apartment.name }}\n        </a-select-option>\n      </a-select>\n      <!--时间选择框-->\n      <a-range-picker class=\"a-range-picker\" style=\"width: 400px\" show-time v-model=\"dateRange\">\n        <template slot=\"renderExtraFooter\"> 日期选择</template>\n      </a-range-picker>\n      <!--查询按钮-->\n      <a-button type=\"primary\" icon=\"search\" @click=\"getdate(dateRange)\"> 查询 </a-button>\n    </div>\n    <h6>（备注：蓝色：等于8h，红色：大于8h，绿色：小于8h，橘色：请假，粉色：假期）</h6>\n    <a-table\n    :columns=\"all_columns_data\"\n    :data-source=\"qadata\"\n    style=\"margin-top: 20px;\"\n    :scroll=\"{x:columns_len}\"\n    bordered\n    \n    :pagination=\"{ defaultPageSize: 100 }\"\n    \n  >\n    <div slot=\"action\" slot-scope=\"text,record\">\n      \n        <!--tb内容-->\n        <div v-if=\"text.tbWorkContent && text.tbWorkContent.length &&text.line_show===true\"> \n          <a v-for=\"(detail, index) in text.tbWorkContent\" :key=\"index\" @click=\"jumpto(detail && detail.url)\">\n            <span class=\"record-text\" style=\"margin-top: 20px; margin-bottom: 20px\">\n                <span v-if='text.count===8' style=\"color: rgb(0, 209, 178)\">[{{ detail.hour }}H]</span>\n                <span v-if='text.count>8' style=\"color: rgb(205, 51, 51)\">[{{ detail.hour }}H]</span>\n                <span v-if='text.count<8' style=\"color: rgb(34, 139, 34)\">[{{ detail.hour }}H]</span>\n                \n                <span v-if='text.count===8' style=\"color: rgb(0, 209, 178)\">{{ detail.content }}</span>\n                <span v-else-if='text.count>8' style=\"color: rgb(205, 51, 51)\">{{ detail.content }}</span>\n                <span v-else-if='text.count<8' style=\"color: rgb(34, 139, 34)\">{{ detail.content }}</span>\n\n                <span v-else-if='detail.work_type===0' style=\"color: rgb(205, 149, 12)\">{{ detail.content }}</span>\n                <span v-else style=\"color: rgb(238, 99, 99)\">{{ detail.content }}</span>\n            </span>\n          </a>\n        </div>\n\n        <!-- 分割线 -->\n        <hr v-if=\"text.line_show\"/>\n       \n\n        <!--自定义内容-->\n        <div>\n          <div v-if=\"text.workContents && text.workContents.length\">\n            <a v-for=\"(detail, index) in text.workContents\" :key=\"index\" @click=\"jumpto(detail && detail.url)\">\n              <span class=\"record-text\" style=\"margin-top: 20px; margin-bottom: 20px\">\n                <span v-if='detail.work_type===1&&text.count===8&&detail.content!==\"\"' style=\"color: rgb(0, 209, 178)\">[{{ detail.hour }}H]</span>\n                <span v-else-if='detail.work_type===1&&text.count>8&&detail.content!==\"\"' style=\"color: rgb(205, 51, 51)\">[{{ detail.hour }}H]</span>\n                <span v-else-if='detail.work_type===1&&text.count<8&&detail.content!==\"\"' style=\"color: rgb(34, 139, 34)\">[{{ detail.hour }}H]</span>\n                \n                <span v-if='detail.work_type===1&&text.count===8'>{{ detail.content }}</span>\n                <span v-else-if='detail.work_type===1&&text.count>8' style=\"color: rgb(205, 51, 51)\">{{ detail.content }}</span>\n                <span v-else-if='detail.work_type===1&&text.count<8' style=\"color: rgb(34, 139, 34)\">{{ detail.content }}</span>\n\n                <span v-else-if='detail.work_type===0' style=\"color: rgb(255, 20, 147)\">{{ detail.content }}</span>\n\n                <span v-else style=\"color: rgb(255, 127, 0)\">{{ detail.content }}</span>\n              </span>\n            </a>\n          </div>\n          <div>\n            <div style=\"margin-top:10px;\">\n              <a-button id='editbutton' size=\"small\" @click=\"showModal( text.date,text.workContents,record.id )\">编辑</a-button>\n            </div>\n          </div>\n        </div>\n      \n      \n    </div>\n\n  </a-table>\n\n  <!-- 弹窗 -->\n  <div>\n    <a-modal v-model=\"visible\" title=\"编辑\" @ok=\"handleOk\"  :afterClose=\"onClose\" width=\"800px\">\n      <div v-for=\"(item,index) in contenttask\" :key=\"index\" style=\"margin-top:5px\">\n        <span width=\"100px\">工作内容: <a-input class=\"editstyle\" v-model=\"item.content\" /></span>\n        <span>链接地址: <a-input class=\"editstyle\" v-model=\"item.url\"/></span>\n        <span>工时: <a-input class=\"editstyle\" v-model=\"item.hour\" style=\"  width:50px;\" /></span>\n        <span><a-button type=\"danger\" @click=\"deltask(index)\" style=\"margin-left:5px;\">删除</a-button></span>\n      </div>\n    \n      <div>\n        <span><a-button type=\"primary\" @click=\"addtask()\">新增</a-button></span>\n        <span><a-button style=\"margin-left:50px;margin-top:10px\" type=\"primary\" @click=\"qingjia()\">请假</a-button></span>\n      </div>     \n    </a-modal>\n  </div>\n\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport 'moment/locale/zh-cn'\nimport { axios } from '@/utils/request'\n\nconst qadata_apartment = {\n  statuscode: 200,\n  data: {\n    apartments: [{ id: 1, name: '商业QA' }],\n  },\n}\n\n\nexport default {\n  name: 'qamemberdata',\n  data(){\n    return{\n      //部门\n      qadata_apartment,\n\n      //时间选择框\n      dateRange: [],\n\n      //表头\n      all_columns_data:[],\n\n      //列表长度\n      columns_len:0,\n\n      //列表数据\n      qadata:[],\n\n      //弹窗是否显示\n      visible: false,\n\n      //弹窗中的任务\n      contenttask:[],\n\n      //弹窗任务日期\n      edittaskdate:\"\",\n\n      //弹窗人的id\n      edituserid:\"\",\n\n      \n      \n    }\n  },\n\n  methods:{\n    init(){\n       //周一 周日\n      const monday = this.dayjs().startOf('week').add(1, 'day')\n      const sunday = this.dayjs().endOf('week').add(1, 'day')\n\n      //时间转moment对象\n      this.dateRange = [\n        moment(monday.format('dddd MMM DD YYYY HH:mm:ss ZZ')),\n        moment(sunday.format('dddd MMM DD YYYY HH:mm:ss ZZ')),\n      ]\n      //let temptime = [monday.format('YYYY-MM-DD HH:mm:ss'), sunday.format('YYYY-MM-DD HH:mm:ss')]\n\n      this.getdate(this.dateRange)\n     \n    },\n    //获取列表数据\n    getdate(dateRange){\n      let temptime = [this.dayjs(dateRange[0].valueOf()).format('YYYY-MM-DD HH:mm:ss'),\n                      this.dayjs(dateRange[1].valueOf()).format('YYYY-MM-DD HH:mm:ss')]\n      this.get_columns(temptime)\n      this.getneedtimelist(temptime)\n    },\n\n    setapartmentid(apartmentid) {\n      this.apartmentid = apartmentid\n    },\n\n    //点击查询获取列表数据\n    getneedtimelist(dateRange){\n      dateRange[0] = this.dayjs(dateRange[0].valueOf()).format('YYYY-MM-DD')\n      dateRange[1] = this.dayjs(dateRange[1].valueOf()).format('YYYY-MM-DD')\n      axios\n        .post('/DailyWork/query',  {\"startTime\":dateRange[0],\"endTime\":dateRange[1]} \n        )\n        .then((response) => {\n          if (response.code === 200) {\n            this.qadata =this.sortdata(response.data)\n            console.log(this.qadata)\n          }\n        })\n        .catch((error) => {\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    //格式化数据\n    sortdata(data){\n      var temp = new Array()\n      temp = this.all_columns_data.slice(2)\n      data.forEach(item=>{\n        for (let i=0;i<temp.length;i++){\n         item[temp[i].children[0].title] = item.dateWork[i]\n        }\n      })\n      data = this.countdayhours(data)\n      return data\n    },\n\n    //计算某人某日总时长和是否显示分割线\n    countdayhours(data){\n      var temp = new Array()\n      temp = this.all_columns_data.slice(2)\n      data.forEach(item=>{\n        for (var i=0;i<temp.length;i++){\n\n          //每天总是长\n          var count = 0\n\n          //tb任务 work任务中间的分割线\n          var line_show = false\n\n          //workContents处理\n          if(item[temp[i].children[0].title].workContents&&item[temp[i].children[0].title].workContents.length!==0){\n            item[temp[i].children[0].title].workContents.forEach(item=>{\n              if(item.hour!==null){count=count+item.hour}\n              if(item.work_type===1){line_show = true}\n              })}\n          \n          //tbWorkContent处理\n          if(item[temp[i].children[0].title].tbWorkContent&&item[temp[i].children[0].title].tbWorkContent.length!==0){\n            //line_show = true\n            item[temp[i].children[0].title].tbWorkContent.forEach(item=>{\n              if(item.hour!==null){count=count+item.hour}\n              })}\n              \n          item[temp[i].children[0].title].count = count\n          item[temp[i].children[0].title].line_show = line_show\n        }\n        })\n      return data\n     },\n\n    //点击跳转\n    jumpto(hrefhost) {\n      if(hrefhost!==null&&hrefhost!==''){\n        window.open(hrefhost)}\n    },\n\n    //打开弹窗\n    showModal(datatime,text,userid) {\n      this.contenttask = text\n      this.edittaskdate = datatime\n      this.edituserid = userid\n      document.documentElement.style = \"\";\n      if(this.contenttask.length===0){\n        this.contenttask=[{\n                          \"content\": \"\",\n                          \"hour\": 0,\n                          \"url\": null,\n                          \"work_type\": 1\n                                }]\n      }\n      this.visible = true;\n    },\n\n    //删除数组元素\n    deltask(num){\n      this.contenttask.splice(num,1)\n    },\n\n    //新增任务\n    addtask(){\n      this.contenttask.push(\n        {\n          \"content\": \"\",\n          \"hour\": null,\n          \"url\": null,\n          \"work_type\": 1\t\n        }\n      )\n    },\n\n    //点击弹窗保存\n    handleOk() {\n      var temp = 1\n      for(var i=0;i<this.contenttask.length;i++){\n        if(this.contenttask[i].content==='' || this.contenttask[i].hour===null){\n          this.$message.error(\"内容和工时不能为空\")\n          temp =0\n          break\n        }\n      }\n      if(temp===1){\n          this.contenttask.forEach(item=>{\n            item.work_type=1\n          })\n          axios\n          .post('/DailyWork/update', {\"userId\":this.edituserid,\n                                      \"date\":this.edittaskdate,\n                                      \"workContent\":this.contenttask})\n          .then((response) => {\n            if (response.code === 200) {\n                this.$message.success('提交成功')\n              this.visible = false;\n              this.getdate(this.dateRange)\n            }\n            else{\n                this.$message.error('提交失败')\n            }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n      }\n    },\n\n    qingjia(){\n      var temp_content =   {\n          \"content\": \"请假\",\n          \"hour\": 0,\n          \"url\": null,\n          \"work_type\": 2\t\n        }\n          axios\n          .post('/DailyWork/update', {\"userId\":this.edituserid,\n                                      \"date\":this.edittaskdate,\n                                      \"workContent\":[temp_content]})\n          .then((response) => {\n            if (response.code === 200) {\n                this.$message.success('提交成功')\n              this.visible = false;\n              this.getdate(this.dateRange)\n            }\n            else{\n                this.$message.error('提交失败')\n            }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n        this.visible = false\n    },\n\n    //关闭弹窗\n    onClose() {\n      document.documentElement.style.overflowY = \"overlay\";\n    },\n\n    //获取表头\n    get_columns(dateRange){\n      // var start = this.dayjs(dateRange[0].valueOf()).format('YYYY-MM-DD HH:mm:ss')\n      // var stop = this.dayjs(dateRange[1].valueOf()).format('YYYY-MM-DD HH:mm:ss')\n      var start = dateRange[0]\n      var stop = dateRange[1]\n      var array = new Array()\n\n      //添加业务线\n      array.push({'title': '业务线',\n                  'key' :'projectName',\n                  'dataIndex': 'projectName',\n                  'width':50,\n      })\n\n      //添加姓名\n      array.push({'title': '姓名',\n                  'key' :'name',\n                  'dataIndex': 'name',\n                  'width':50,\n      })\n      var current = new Date(start)\n      stop  = new Date(stop);\n      while (current <= stop) {\n          array.push( {'title':this.get_week( this.dayjs(new Date (current)).day() ),\n                      'children':[{'title':this.dayjs(new Date (current)).format('YYYY-MM-DD'),\n                                  'key':this.dayjs(new Date (current)).format('YYYY-MM-DD'),\n                                  'dataIndex':this.dayjs(new Date (current)).format('YYYY-MM-DD'),\n                                  'width':50,\n                                  scopedSlots: { customRender: 'action' },\n                                  }]\n                      })\n\n              current.setDate(current.getDate() + 1)\n      }\n      this.columns_len = array.length * 120\n      this.all_columns_data = array\n    },\n\n    //获取日期的星期几\n    get_week(num){\n      var weeks = new Array(\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\")\n      var week = weeks[num]\n      return week\n    },\n\n  },\n  computed:{\n    \n  },\n  created() {\n    this.init()\n  },\n  \n}\n\n\n</script>\n\n\n<style scoped>\n.a-range-picker {\n  margin-left: 20px;\n  margin-right: 20px;\n}\n.ant-table td { \n  white-space: nowrap; \n  \n}\n\n.editstyle{\n  width:200px;\n  margin-bottom:2px;\n}\n\n\n\n</style>"],"sourceRoot":"src/views/qadata"}]}