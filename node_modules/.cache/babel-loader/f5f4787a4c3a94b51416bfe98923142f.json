{"remainingRequest":"/Users/momo/vue/live-data-analysis-static/node_modules/thread-loader/dist/cjs.js!/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js!/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/vue/live-data-analysis-static/src/views/user/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/vue/live-data-analysis-static/src/views/user/Register.vue","mtime":1626864386296},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/thread-loader/dist/cjs.js","mtime":1626939577640},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1640003217818},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1640003225539}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbW9tby92dWUvbGl2ZS1kYXRhLWFuYWx5c2lzLXN0YXRpYy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGdldFNtc0NhcHRjaGEgfSBmcm9tICdAL2FwaS9sb2dpbic7CnZhciBsZXZlbE5hbWVzID0gewogIDA6ICfkvY4nLAogIDE6ICfkvY4nLAogIDI6ICfkuK0nLAogIDM6ICflvLonCn07CnZhciBsZXZlbENsYXNzID0gewogIDA6ICdlcnJvcicsCiAgMTogJ2Vycm9yJywKICAyOiAnd2FybmluZycsCiAgMzogJ3N1Y2Nlc3MnCn07CnZhciBsZXZlbENvbG9yID0gewogIDA6ICcjZmYwMDAwJywKICAxOiAnI2ZmMDAwMCcsCiAgMjogJyNmZjdlMDUnLAogIDM6ICcjNTJjNDFhJwp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1JlZ2lzdGVyJywKICBjb21wb25lbnRzOiB7fSwKICBtaXhpbnM6IFtdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB0aGlzLiRmb3JtLmNyZWF0ZUZvcm0odGhpcyksCiAgICAgIHN0YXRlOiB7CiAgICAgICAgdGltZTogNjAsCiAgICAgICAgc21zU2VuZEJ0bjogZmFsc2UsCiAgICAgICAgcGFzc3dvcmRMZXZlbDogMCwKICAgICAgICBwYXNzd29yZExldmVsQ2hlY2tlZDogZmFsc2UsCiAgICAgICAgcGVyY2VudDogMTAsCiAgICAgICAgcHJvZ3Jlc3NDb2xvcjogJyNGRjAwMDAnCiAgICAgIH0sCiAgICAgIHJlZ2lzdGVyQnRuOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwYXNzd29yZExldmVsQ2xhc3M6IGZ1bmN0aW9uIHBhc3N3b3JkTGV2ZWxDbGFzcygpIHsKICAgICAgcmV0dXJuIGxldmVsQ2xhc3NbdGhpcy5zdGF0ZS5wYXNzd29yZExldmVsXTsKICAgIH0sCiAgICBwYXNzd29yZExldmVsTmFtZTogZnVuY3Rpb24gcGFzc3dvcmRMZXZlbE5hbWUoKSB7CiAgICAgIHJldHVybiBsZXZlbE5hbWVzW3RoaXMuc3RhdGUucGFzc3dvcmRMZXZlbF07CiAgICB9LAogICAgcGFzc3dvcmRMZXZlbENvbG9yOiBmdW5jdGlvbiBwYXNzd29yZExldmVsQ29sb3IoKSB7CiAgICAgIHJldHVybiBsZXZlbENvbG9yW3RoaXMuc3RhdGUucGFzc3dvcmRMZXZlbF07CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVQYXNzd29yZExldmVsOiBmdW5jdGlvbiBoYW5kbGVQYXNzd29yZExldmVsKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICB2YXIgbGV2ZWwgPSAwOyAvLyDliKTmlq3ov5nkuKrlrZfnrKbkuLLkuK3mnInmsqHmnInmlbDlrZcKCiAgICAgIGlmICgvWzAtOV0vLnRlc3QodmFsdWUpKSB7CiAgICAgICAgbGV2ZWwrKzsKICAgICAgfSAvLyDliKTmlq3lrZfnrKbkuLLkuK3mnInmsqHmnInlrZfmr40KCgogICAgICBpZiAoL1thLXpBLVpdLy50ZXN0KHZhbHVlKSkgewogICAgICAgIGxldmVsKys7CiAgICAgIH0gLy8g5Yik5pat5a2X56ym5Liy5Lit5pyJ5rKh5pyJ54m55q6K56ym5Y+3CgoKICAgICAgaWYgKC9bXjAtOWEtekEtWl9dLy50ZXN0KHZhbHVlKSkgewogICAgICAgIGxldmVsKys7CiAgICAgIH0KCiAgICAgIHRoaXMuc3RhdGUucGFzc3dvcmRMZXZlbCA9IGxldmVsOwogICAgICB0aGlzLnN0YXRlLnBlcmNlbnQgPSBsZXZlbCAqIDMwOwoKICAgICAgaWYgKGxldmVsID49IDIpIHsKICAgICAgICBpZiAobGV2ZWwgPj0gMykgewogICAgICAgICAgdGhpcy5zdGF0ZS5wZXJjZW50ID0gMTAwOwogICAgICAgIH0KCiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAobGV2ZWwgPT09IDApIHsKICAgICAgICAgIHRoaXMuc3RhdGUucGVyY2VudCA9IDEwOwogICAgICAgIH0KCiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCflr4bnoIHlvLrluqbkuI3lpJ8nKSk7CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVQYXNzd29yZENoZWNrOiBmdW5jdGlvbiBoYW5kbGVQYXNzd29yZENoZWNrKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICB2YXIgcGFzc3dvcmQgPSB0aGlzLmZvcm0uZ2V0RmllbGRWYWx1ZSgncGFzc3dvcmQnKTsKCiAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfor7fovpPlhaXlr4bnoIEnKSk7CiAgICAgIH0KCiAgICAgIGlmICh2YWx1ZSAmJiBwYXNzd29yZCAmJiB2YWx1ZS50cmltKCkgIT09IHBhc3N3b3JkLnRyaW0oKSkgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcign5Lik5qyh5a+G56CB5LiN5LiA6Ie0JykpOwogICAgICB9CgogICAgICBjYWxsYmFjaygpOwogICAgfSwKICAgIGhhbmRsZVBob25lQ2hlY2s6IGZ1bmN0aW9uIGhhbmRsZVBob25lQ2hlY2socnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIGNhbGxiYWNrKCk7CiAgICB9LAogICAgaGFuZGxlUGFzc3dvcmRJbnB1dENsaWNrOiBmdW5jdGlvbiBoYW5kbGVQYXNzd29yZElucHV0Q2xpY2soKSB7CiAgICAgIGlmICghdGhpcy5pc01vYmlsZSgpKSB7CiAgICAgICAgdGhpcy5zdGF0ZS5wYXNzd29yZExldmVsQ2hlY2tlZCA9IHRydWU7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLnN0YXRlLnBhc3N3b3JkTGV2ZWxDaGVja2VkID0gZmFsc2U7CiAgICB9LAogICAgaGFuZGxlU3VibWl0OiBmdW5jdGlvbiBoYW5kbGVTdWJtaXQoKSB7CiAgICAgIHZhciB2YWxpZGF0ZUZpZWxkcyA9IHRoaXMuZm9ybS52YWxpZGF0ZUZpZWxkcywKICAgICAgICAgIHN0YXRlID0gdGhpcy5zdGF0ZSwKICAgICAgICAgICRyb3V0ZXIgPSB0aGlzLiRyb3V0ZXI7CiAgICAgIHZhbGlkYXRlRmllbGRzKHsKICAgICAgICBmb3JjZTogdHJ1ZQogICAgICB9LCBmdW5jdGlvbiAoZXJyLCB2YWx1ZXMpIHsKICAgICAgICBpZiAoIWVycikgewogICAgICAgICAgc3RhdGUucGFzc3dvcmRMZXZlbENoZWNrZWQgPSBmYWxzZTsKICAgICAgICAgICRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgIG5hbWU6ICdyZWdpc3RlclJlc3VsdCcsCiAgICAgICAgICAgIHBhcmFtczogX29iamVjdFNwcmVhZCh7fSwgdmFsdWVzKQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRDYXB0Y2hhOiBmdW5jdGlvbiBnZXRDYXB0Y2hhKGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdmFyIHZhbGlkYXRlRmllbGRzID0gdGhpcy5mb3JtLnZhbGlkYXRlRmllbGRzLAogICAgICAgICAgc3RhdGUgPSB0aGlzLnN0YXRlLAogICAgICAgICAgJG1lc3NhZ2UgPSB0aGlzLiRtZXNzYWdlLAogICAgICAgICAgJG5vdGlmaWNhdGlvbiA9IHRoaXMuJG5vdGlmaWNhdGlvbjsKICAgICAgdmFsaWRhdGVGaWVsZHMoWydtb2JpbGUnXSwgewogICAgICAgIGZvcmNlOiB0cnVlCiAgICAgIH0sIGZ1bmN0aW9uIChlcnIsIHZhbHVlcykgewogICAgICAgIGlmICghZXJyKSB7CiAgICAgICAgICBzdGF0ZS5zbXNTZW5kQnRuID0gdHJ1ZTsKICAgICAgICAgIHZhciBpbnRlcnZhbCA9IHdpbmRvdy5zZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChzdGF0ZS50aW1lLS0gPD0gMCkgewogICAgICAgICAgICAgIHN0YXRlLnRpbWUgPSA2MDsKICAgICAgICAgICAgICBzdGF0ZS5zbXNTZW5kQnRuID0gZmFsc2U7CiAgICAgICAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpOwogICAgICAgICAgICB9CiAgICAgICAgICB9LCAxMDAwKTsKICAgICAgICAgIHZhciBoaWRlID0gJG1lc3NhZ2UubG9hZGluZygn6aqM6K+B56CB5Y+R6YCB5LitLi4nLCAwKTsKICAgICAgICAgIGdldFNtc0NhcHRjaGEoewogICAgICAgICAgICBtb2JpbGU6IHZhbHVlcy5tb2JpbGUKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBzZXRUaW1lb3V0KGhpZGUsIDI1MDApOwogICAgICAgICAgICAkbm90aWZpY2F0aW9uWydzdWNjZXNzJ10oewogICAgICAgICAgICAgIG1lc3NhZ2U6ICfmj5DnpLonLAogICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAn6aqM6K+B56CB6I635Y+W5oiQ5Yqf77yM5oKo55qE6aqM6K+B56CB5Li677yaJyArIHJlcy5yZXN1bHQuY2FwdGNoYSwKICAgICAgICAgICAgICBkdXJhdGlvbjogOAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgc2V0VGltZW91dChoaWRlLCAxKTsKICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7CiAgICAgICAgICAgIHN0YXRlLnRpbWUgPSA2MDsKICAgICAgICAgICAgc3RhdGUuc21zU2VuZEJ0biA9IGZhbHNlOwoKICAgICAgICAgICAgX3RoaXMucmVxdWVzdEZhaWxlZChlcnIpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICByZXF1ZXN0RmFpbGVkOiBmdW5jdGlvbiByZXF1ZXN0RmFpbGVkKGVycikgewogICAgICB0aGlzLiRub3RpZmljYXRpb25bJ2Vycm9yJ10oewogICAgICAgIG1lc3NhZ2U6ICfplJnor68nLAogICAgICAgIGRlc2NyaXB0aW9uOiAoKGVyci5yZXNwb25zZSB8fCB7fSkuZGF0YSB8fCB7fSkubWVzc2FnZSB8fCAn6K+35rGC5Ye6546w6ZSZ6K+v77yM6K+356iN5ZCO5YaN6K+VJywKICAgICAgICBkdXJhdGlvbjogNAogICAgICB9KTsKICAgICAgdGhpcy5yZWdpc3RlckJ0biA9IGZhbHNlOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICdzdGF0ZS5wYXNzd29yZExldmVsJzogZnVuY3Rpb24gc3RhdGVQYXNzd29yZExldmVsKHZhbCkge30KICB9Cn07"},null]}