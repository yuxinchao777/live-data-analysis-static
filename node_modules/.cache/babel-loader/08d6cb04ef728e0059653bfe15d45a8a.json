{"remainingRequest":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js!/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/vue/live-data-analysis-static/src/views/dashboard/Member.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/vue/live-data-analysis-static/src/views/dashboard/Member.vue","mtime":1626864386284},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1626939577610},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1626939590555}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Member.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <a-row>\n      <a-col :span=\"24\" :style=\"{ background: '#ffffff', 'margin-bottom': '24px' }\">\n        <a-row type=\"flex\" justify=\"end\">\n          <a-col>\n            <a-affix :offset-top=\"10\" @change=\"affixChanged\">\n              <div :class=\"affixed ? 'affixed' : 'affix'\">\n                <a style=\"paddingright: 48px\">\n                  <a-select default-value=\"all\" style=\"width: 120px\" @change=\"handleTypeChange\">\n                    <a-select-option v-for=\"(option, index) in typeOptions\" :key=\"index\" :value=\"option.value\">\n                      {{ option.name }}\n                    </a-select-option>\n                  </a-select>\n                </a>\n                <a-radio-group :value=\"currentPeriod\" class=\"timeRadioGroup\" @change=\"handleTimeChange\">\n                  <a-radio-button\n                    v-for=\"(time, index) in timeOptions\"\n                    :key=\"index\"\n                    :value=\"time.value\"\n                    class=\"timeRadioButtons\"\n                  >\n                    {{ time.name }}\n                  </a-radio-button>\n                </a-radio-group>\n                <a-range-picker\n                  :disabled-date=\"disabledDate\"\n                  @change=\"handleDateRangeChange\"\n                  :style=\"{ width: '256px', 'margin-left': '24px', 'margin-right': '48px' }\"\n                  :value=\"dateRange\"\n                />\n              </div>\n            </a-affix>\n          </a-col>\n        </a-row>\n      </a-col>\n    </a-row>\n    <a-row :gutter=\"24\">\n      <a-col :span=\"8\" :style=\"{ marginBottom: '24px' }\">\n        <chart-card :loading=\"loading\" title=\"代码行数\" :total=\"formatNumberString(codeAnalysis.codeNum)\">\n          <a-tooltip title=\"RD增加和删减累计代码行数\" slot=\"action\">\n            <a-icon type=\"info-circle-o\" />\n          </a-tooltip>\n          <div style=\"postion: relative\">\n            <span class=\"ant-font-2\" slot=\"term\">新增</span>\n            {{ formatNumberString(codeAnalysis.addCodeNum) }}\n            <br />\n            <span class=\"ant-font-2\" slot=\"term\">删除</span>\n            {{ formatNumberString(codeAnalysis.delCodeNum) }}\n            <a-progress\n              style=\"position: absolute; right: 0; bottom: 0px\"\n              type=\"circle\"\n              :percent=\"formatPercentString(codeAnalysis.addProportion * 100)\"\n              :width=\"90\"\n              :format=\"(percent) => `新增占比  ${percent}% `\"\n              :strokeWidth=\"10\"\n            />\n          </div>\n          <template slot=\"footer\">\n            <trend\n              :flag=\"codeAnalysis.comparisonDirection === 'down' ? 'down' : 'up'\"\n              :style=\"{\n                visibility: codeAnalysis.comparisonDirection == 'hide' ? 'hidden' : 'visible',\n                'margin-right': '16px',\n              }\"\n            >\n              <span slot=\"term\">{{ reletiveText }}</span>\n              {{ formatPercentString(codeAnalysis.comparison * 100) }}%\n            </trend>\n          </template>\n        </chart-card>\n      </a-col>\n\n      <a-col :span=\"8\" :style=\"{ marginBottom: '24px' }\">\n        <chart-card :loading=\"loading\" title=\"新需求测试case数\" :total=\"formatNumberString(newCaseCount.sum)\">\n          <a-tooltip title=\"新需求累计执行case数\" slot=\"action\">\n            <a-icon type=\"info-circle-o\" />\n          </a-tooltip>\n          <template slot=\"footer\">\n            <trend\n              :flag=\"newCaseCount.trend == 'down' ? 'down' : 'up'\"\n              :style=\"{ visibility: newCaseCount.trend == 'hide' ? 'hidden' : 'visible', 'margin-right': '16px' }\"\n            >\n              <span slot=\"term\">{{ reletiveText }}</span>\n              {{ formatPercentString(newCaseCount.ratio * 100) }}%\n            </trend>\n          </template>\n        </chart-card>\n      </a-col>\n\n      <a-col :span=\"8\" :style=\"{ marginBottom: '24px' }\">\n        <chart-card :loading=\"loading\" title=\"公测包回归case数\" :total=\"formatNumberString(publicBetaTestCase.caseNum)\">\n          <a-tooltip title=\"公测包累计回归case数\" slot=\"action\">\n            <a-icon type=\"info-circle-o\" />\n          </a-tooltip>\n          <div style=\"postion: relative\">\n            <span class=\"ant-font-2\" slot=\"term\">人工</span>\n            {{ formatNumberString(publicBetaTestCase.manualCaseNum) }}\n            <br />\n            <span class=\"ant-font-2\" slot=\"term\">自动化</span>\n            {{ formatNumberString(publicBetaTestCase.autoCaseNum) }}\n            <a-progress\n              style=\"position: absolute; right: 0; bottom: 0px\"\n              type=\"circle\"\n              :percent=\"formatPercentString(publicBetaTestCase.autoProportion * 100)\"\n              :width=\"90\"\n              :format=\"(percent) => `自动化占比${percent}% `\"\n              :strokeWidth=\"10\"\n            />\n          </div>\n          <template slot=\"footer\">\n            <span style=\"margin-right: 16px\"></span>\n          </template>\n        </chart-card>\n      </a-col>\n    </a-row>\n\n    <a-card :loading=\"loading\" :bordered=\"false\" :body-style=\"{ padding: '30px' }\">\n      <div class=\"salesCard\">\n        <a-tabs\n          default-active-key=\"RD\"\n          :activeKey=\"currentTab\"\n          size=\"large\"\n          :tab-bar-style=\"{ marginBottom: '24px', paddingLeft: '16px' }\"\n          @change=\"handleTabChange\"\n        >\n          <a-tab-pane :forceRender=\"true\" tab=\"RD\" key=\"RD\">\n            <div class=\"ant-table-wrapper\">\n              <a-table\n                row-key=\"index\"\n                size=\"middle\"\n                :columns=\"rdTableColumns\"\n                :dataSource=\"rdData\"\n                :pagination=\"{ pageSize: 10 }\"\n                :loading=\"loadingRD\"\n                :scroll=\"{ scrollToFirstRowOnChange: false }\"\n              >\n                <span slot=\"codeVsbugComparison\" slot-scope=\"codeVsbugComparison\"> {{ codeVsbugComparison }}‰ </span>\n                <span slot=\"unresolvedBugProbability\" slot-scope=\"unresolvedBugProbability\">\n                  {{ unresolvedBugProbability }}%\n                </span>\n              </a-table>\n            </div>\n          </a-tab-pane>\n          <a-tab-pane :forceRender=\"true\" tab=\"QA\" key=\"QA\">\n            <div class=\"ant-table-wrapper\">\n              <a-table\n                row-key=\"index\"\n                size=\"middle\"\n                :columns=\"qaTableColumns\"\n                :dataSource=\"qaData\"\n                :pagination=\"{ pageSize: 10 }\"\n                :loading=\"loadingQA\"\n                :scroll=\"{ scrollToFirstRowOnChange: false }\"\n              >\n                <span slot=\"missBugProbability\" slot-scope=\"missBugProbability\"> {{ missBugProbability }}% </span>\n              </a-table>\n            </div>\n          </a-tab-pane>\n          <a-auto-complete\n            class=\"global-search\"\n            size=\"large\"\n            style=\"width: 100%\"\n            placeholder=\"输入姓名\"\n            option-label-prop=\"value\"\n            @select=\"onSelect\"\n            @search=\"handleSearch\"\n            slot=\"tabBarExtraContent\"\n            v-model=\"searchWord\"\n            allow-clear\n          >\n            <template slot=\"dataSource\">\n              <a-select-option v-for=\"word in keywords\" :key=\"word\" :value=\"word\">\n                {{ word }}\n              </a-select-option>\n            </template>\n            <a-input>\n              <a-icon slot=\"prefix\" type=\"search\" />\n            </a-input>\n          </a-auto-complete>\n        </a-tabs>\n      </div>\n    </a-card>\n  </div>\n</template>\n\n<script>\nimport { axios } from '@/utils/request'\nimport {\n  ChartCard,\n  MiniArea,\n  MiniBar,\n  MiniProgress,\n  RankList,\n  Bar,\n  Trend,\n  NumberInfo,\n  MiniSmoothArea,\n} from '@/components'\nimport { baseMixin } from '@/store/app-mixin'\nimport Vue from 'vue'\nimport moment from 'moment'\nimport _ from 'lodash'\n\n// RD表头\nconst rdTableColumns = [\n  {\n    dataIndex: 'index',\n    title: '序号',\n    width: 90,\n  },\n  {\n    dataIndex: 'name',\n    title: '姓名',\n    width: 150,\n  },\n  {\n    dataIndex: 'functionNum',\n    title: '项目数量',\n    align: 'right',\n    sorter: (a, b) => a.functionNum - b.functionNum,\n  },\n  {\n    dataIndex: 'addCodeNum',\n    title: '新增代码行数',\n    align: 'right',\n    sorter: (a, b) => a.codeNum - b.codeNum,\n  },\n  {\n    dataIndex: 'delCodeNum',\n    title: '删除代码行数',\n    align: 'right',\n    sorter: (a, b) => a.codeNum - b.codeNum,\n  },\n  {\n    dataIndex: 'bugNum',\n    title: 'BUG总数',\n    align: 'right',\n    sorter: (a, b) => a.bugNum - b.bugNum,\n  },\n  {\n    dataIndex: 'codeVsbugComparison',\n    title: '千行代码BUG率',\n    align: 'right',\n    sorter: (a, b) => a.codeVsbugComparison - b.codeVsbugComparison,\n    scopedSlots: { customRender: 'codeVsbugComparison' },\n  },\n  {\n    dataIndex: 'unresolvedBug',\n    title: '遗留bug数',\n    align: 'right',\n    sorter: (a, b) => a.unresolvedBug - b.unresolvedBug,\n  },\n  {\n    dataIndex: 'unresolvedBugProbability',\n    title: '遗留bug率',\n    align: 'right',\n    sorter: (a, b) => a.unresolvedBugProbability - b.unresolvedBugProbability,\n    scopedSlots: { customRender: 'unresolvedBugProbability' },\n  },\n]\n\n// QA表头\nconst qaTableColumns = [\n  {\n    dataIndex: 'index',\n    title: '序号',\n    width: 90,\n  },\n  {\n    dataIndex: 'name',\n    title: '姓名',\n    width: 150,\n  },\n  {\n    dataIndex: 'functionNum',\n    title: '项目数量',\n    align: 'right',\n    sorter: (a, b) => a.functionNum - b.functionNum,\n  },\n  {\n    dataIndex: 'writeCaseNum',\n    title: 'case编写数量',\n    align: 'right',\n    sorter: (a, b) => a.writeCaseNum - b.writeCaseNum,\n  },\n  {\n    dataIndex: 'executeCaseNum',\n    title: 'case执行数量',\n    align: 'right',\n    sorter: (a, b) => a.executeCaseNum - b.executeCaseNum,\n  },\n  {\n    dataIndex: 'submitBugNum',\n    title: '提交bug数',\n    align: 'right',\n    sorter: (a, b) => a.range - b.range,\n  },\n  {\n    dataIndex: 'missBugNum',\n    title: '漏测bug数',\n    align: 'right',\n    sorter: (a, b) => a.missBugNum - b.missBugNum,\n  },\n  {\n    dataIndex: 'missBugProbability',\n    title: '漏测bug率',\n    align: 'right',\n    sorter: (a, b) => a.missBugProbability - b.missBugProbability,\n    scopedSlots: { customRender: 'missBugProbability' },\n  },\n]\n\nconst timePeriod = {\n  all: 'all',\n  year: 'year',\n  quarter: 'quarter',\n  month: 'month',\n  lastMonth: 'lastMonth',\n  custom: 'custom',\n}\n\nexport default {\n  name: 'Analysis',\n  mixins: [baseMixin],\n  components: {\n    ChartCard,\n    MiniArea,\n    MiniBar,\n    MiniProgress,\n    RankList,\n    Bar,\n    Trend,\n    NumberInfo,\n    MiniSmoothArea,\n  },\n\n  data() {\n    return {\n      keywords: new Set(),\n      keywordsBackup: null,\n      searchWord: '',\n      timePeriod,\n      affixed: false,\n      loading: true,\n      loadingQA: true,\n      loadingRD: true,\n      rdTableColumns,\n      rdData: [],\n      rdDataBackup: [],\n      qaTableColumns,\n      qaData: [],\n      qaDataBackup: [],\n      currentTab: 'RD',\n      currentType: 'all',\n      currentStartTime: this.getFirstDayOfMonth(),\n      currentEndTime: this.getEndOfMonth(),\n      currentPeriod: this.dayjs().date() < 10 ? timePeriod.lastMonth : timePeriod.month,\n      dateRange: [],\n      reletiveText: '月环比',\n      codeAnalysis: {\n        codeNum: 0,\n        addCodeNum: 0,\n        delCodeNum: 0,\n        addProportion: 0.0,\n        comparison: 0.0,\n        comparisonDirection: 'up',\n      },\n      newCaseCount: {\n        sum: 0,\n        trend: 'hide',\n        ratio: 0.0,\n      },\n      publicBetaTestCase: {\n        caseNum: 0,\n        manualCaseNum: 0,\n        autoCaseNum: 0,\n        autoProportion: 0.0,\n      },\n      typeOptions: [\n        { name: '全部', value: 'all' },\n        { name: '营收产品', value: 'products' },\n        { name: '营收活动', value: 'activity' },\n        { name: 'SC', value: 'SC' },\n        { name: '增长', value: 'increase' },\n        { name: '社交&基础', value: 'social' },\n        { name: '媒体', value: 'basic' },\n      ],\n      timeOptions: [\n        { name: '上月', value: timePeriod.lastMonth },\n        { name: '本月', value: timePeriod.month },\n        { name: '本季度', value: timePeriod.quarter },\n        { name: '本年', value: timePeriod.year },\n      ],\n    }\n  },\n  watch: {\n    currentPeriod: function (val) {\n      if (val == this.timePeriod.month) {\n        this.reletiveText = '月环比'\n      } else if (val == this.timePeriod.quarter) {\n        this.reletiveText = '季环比'\n      } else if (val == this.timePeriod.year) {\n        this.reletiveText = '年环比'\n      }\n    },\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    init() {\n      console.log('currentPeriod', this.currentPeriod)\n      this.changeTime(this.currentPeriod)\n      this.initCodeAnalysis()\n      this.initPublicBetaTestCase()\n      this.initQAData()\n      this.initRDData()\n      this.getNewCaseCount()\n      this.$nextTick(() => {\n        this.loading = false\n      })\n    },\n    refreshData() {\n      console.log(\n        `refreshData: tab = ${this.currentTab}, type = ${this.currentType}, stime = ${this.currentStartTime}, etime = ${this.currentEndTime}, period = ${this.currentPeriod}`\n      )\n      this.loadingQA = true\n      this.initQAData()\n      this.loadingRD = true\n      this.initRDData()\n      this.initCodeAnalysis()\n      this.initPublicBetaTestCase()\n      this.getNewCaseCount()\n    },\n    /** 获取QA表格数据 */\n    initQAData() {\n      axios\n        .post('/QAPersonalController/getQAPersonalDetails', {\n          projectName: this.currentType,\n          stime: this.currentStartTime,\n          etime: this.getEndOfMonth(),\n          period: this.currentPeriod,\n        })\n        .then((response) => {\n          let data = response.result\n          for (let i = 0; i < data.length; i++) {\n            data[i].index = i + 1\n            data[i].missBugProbability = Math.round(Number(data[i].missBugProbability) * 10000) / 100\n          }\n          this.$nextTick(() => {\n            this.qaData = data\n          })\n          this.qaDataBackup = data\n          data.forEach((e) => this.keywords.add(e.name))\n          this.keywordsBackup = this.keywords\n          this.loadingQA = false\n        })\n        .catch((error) => {\n          this.loadingQA = false\n          console.log(error)\n          this.$message.error('QA表格数据获取失败')\n        })\n    },\n    /** 获取RD表格数据 */\n    initRDData() {\n      axios\n        .post('/RDPersonalController/getRDPersonalDetails', {\n          projectName: this.currentType,\n          stime: this.currentStartTime,\n          etime: this.getEndOfMonth(),\n          period: this.currentPeriod,\n        })\n        .then((response) => {\n          let data = response.data\n          for (let i = 0; i < data.length; i++) {\n            data[i].index = i + 1\n            for (var key in data[i]) {\n              if (data[i][key] == null) {\n                data[i][key] = 0\n              }\n            }\n            data[i].unresolvedBugProbability = Math.round(Number(data[i].unresolvedBugProbability) * 10000) / 100\n            data[i].codeVsbugComparison = Math.round(Number(data[i].codeVsbugComparison) * 100000) / 100\n          }\n          this.$nextTick(() => {\n            this.rdData = data\n          })\n          this.rdDataBackup = data\n          data.forEach((e) => this.keywords.add(e.name))\n          this.loadingRD = false\n        })\n        .catch((error) => {\n          this.loadingRD = false\n          console.log(error)\n          this.$message.error('RD表格数据获取失败')\n        })\n    },\n    /** 初始化代码行数数据 */\n    initCodeAnalysis() {\n      axios\n        .post('/RDPersonalController/getCodeAnalysis', {\n          projectName: this.currentType,\n          stime: this.currentStartTime,\n          etime: this.getEndOfMonth(),\n          period: this.currentPeriod,\n        })\n        .then((response) => {\n          this.codeAnalysis = response.data\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('代码行数数据获取失败')\n        })\n    },\n    /** 初始化公测包回归case数数据 */\n    initPublicBetaTestCase() {\n      axios\n        .post('/QAPersonalController/getPublicBetaTestCase', {\n          stime: this.currentStartTime,\n          etime: this.getEndOfMonth(),\n          period: this.currentPeriod,\n        })\n        .then((response) => {\n          this.publicBetaTestCase = response.data\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('公测包case数据获取失败')\n        })\n    },\n    /** 初始化新需求case数数据 */\n    getNewCaseCount() {\n      axios\n        .post('/QAPersonalController/getNewCaseCount', {\n          stime: this.currentStartTime,\n          etime: this.getEndOfMonth(),\n          period: this.currentPeriod,\n          projectName: this.currentType,\n        })\n        .then((response) => {\n          this.newCaseCount = response.data\n          Vue.set(this.newCaseCount, 'trend', response.data.trend)\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('新需求case数据获取失败')\n        })\n    },\n    /** tab变更。QA/RD 两种tab */\n    handleTabChange(tabKey) {\n      this.currentTab = tabKey\n    },\n    /** 类型变更。全部、基础、PK等 */\n    handleTypeChange(type) {\n      this.currentType = type\n      this.refreshData()\n    },\n    /** 时间段变更。当月、当季度等 */\n    handleTimeChange(scope) {\n      let time = scope.target.value\n      this.changeTime(time)\n      console.log('time changed ' + time)\n      this.refreshData()\n    },\n    changeTime(time) {\n      switch (time) {\n        case 'lastMonth':\n          this.currentStartTime = this.getFirstDayOfLastMonth()\n          this.currentEndTime = this.getEndOfLastMonth()\n          this.currentPeriod = this.timePeriod.lastMonth\n          this.dateRange = this.getDateRange()\n          break\n        case 'month':\n          this.currentStartTime = this.getFirstDayOfMonth()\n          this.currentEndTime = this.getEndOfMonth()\n          this.currentPeriod = this.timePeriod.month\n          this.dateRange = this.getDateRange()\n          break\n        case 'year':\n          this.currentStartTime = this.getFirstDayOfYear()\n          this.currentEndTime = this.getEndOfMonth()\n          this.currentPeriod = this.timePeriod.year\n          this.dateRange = this.getDateRange()\n          break\n        case 'quarter':\n          this.currentStartTime = this.getFirstDayOfQuarter()\n          this.currentEndTime = this.getEndOfMonth()\n          this.currentPeriod = this.timePeriod.quarter\n          this.dateRange = this.getDateRange()\n          break\n        // TODO: all的时间段是多少？\n        case 'all':\n          this.currentStartTime = this.getFirstDayOfYear()\n          this.currentEndTime = this.getEndOfMonth()\n          this.currentPeriod = this.timePeriod.all\n          this.dateRange = this.getDateRange()\n          break\n        default:\n      }\n    },\n    /** 日期选择器范围变化 */\n    handleDateRangeChange(range) {\n      this.currentStartTime = this.dayjs(range[0].valueOf()).startOf('day').format('YYYY-MM-DD HH:mm:ss')\n      this.currentEndTime = this.dayjs(range[1].valueOf()).endOf('day').format('YYYY-MM-DD HH:mm:ss')\n      this.currentPeriod = timePeriod.custom\n      this.refreshData()\n    },\n    onSelect(value) {\n      console.log('onSelect', value)\n      this.filterData(value)\n      this.searchWord = value\n    },\n    handleSearch(value) {\n      if (_.isEmpty(value)) {\n        this.qaData = this.qaDataBackup\n        this.rdData = this.rdDataBackup\n        this.keywords = this.keywordsBackup\n      }\n      console.log('handleSearch', value)\n      this.filterData(value)\n    },\n    filterData(value) {\n      this.keywords = Array.from(this.keywordsBackup).filter((e) => e.indexOf(value) >= 0)\n      this.qaData = this.qaDataBackup.filter((e) => e.name.indexOf(value) >= 0)\n      this.rdData = this.rdDataBackup.filter((e) => e.name.indexOf(value) >= 0)\n      if (this.qaData.length == 0 && this.rdData.length > 0) {\n        this.currentTab = 'RD'\n      }\n      if (this.qaData.length > 0 && this.rdData.length == 0) {\n        this.currentTab = 'QA'\n      }\n    },\n    // 获取初始时间，参考 https://day.js.org/docs/en/manipulate/start-of\n    /** 获取当月第一天的格式化时间戳 */\n    getFirstDayOfMonth() {\n      return this.dayjs().startOf('month').format('YYYY-MM-DD HH:mm:ss')\n    },\n    /** 获取当季度第一天的格式化时间戳 */\n    getFirstDayOfQuarter() {\n      return this.dayjs().startOf('quarter').format('YYYY-MM-DD HH:mm:ss')\n    },\n    /** 获取当自然年第一天的格式化时间戳 */\n    getFirstDayOfYear() {\n      return this.dayjs().startOf('year').format('YYYY-MM-DD HH:mm:ss')\n    },\n    /** 获取当天结束时间的格式化时间戳 */\n    getEndOfMonth() {\n      return this.dayjs().endOf('month').format('YYYY-MM-DD HH:mm:ss')\n    },\n    getFirstDayOfLastMonth() {\n      return this.dayjs().subtract(1, 'month').startOf('month').format('YYYY-MM-DD HH:mm:ss')\n    },\n    getEndOfLastMonth() {\n      return this.dayjs().subtract(1, 'month').endOf('month').format('YYYY-MM-DD HH:mm:ss')\n    },\n    getDateRange() {\n      console.log('getDateRange', this.currentStartTime, this.currentEndTime)\n      return [moment(this.currentStartTime, this.dateFormat), moment(this.currentEndTime, this.dateFormat)]\n    },\n    formatNumberString(number) {\n      return Number(number).toLocaleString('en')\n    },\n    formatPercentString(number) {\n      if (number == null) {\n        return number\n      }\n      return Number(Number(number).toFixed(2))\n    },\n    affixChanged() {\n      this.affixed = !this.affixed\n    },\n    disabledDate(current) {\n      // 不能选择今天之后的日期\n      return current && current > moment().endOf('day')\n    },\n  },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.extra-wrapper {\n  line-height: 55px;\n  padding-right: 24px;\n\n  .extra-item {\n    display: inline-block;\n    margin-right: 24px;\n\n    a {\n      margin-left: 24px;\n    }\n  }\n}\n\n.antd-pro-pages-dashboard-analysis-twoColLayout {\n  position: relative;\n  display: flex;\n  display: block;\n  flex-flow: row wrap;\n}\n\n.antd-pro-pages-dashboard-analysis-salesCard {\n  width: 100%;\n  height: calc(100% - 24px);\n  /* /deep/ .ant-card-head {\n    position: relative;\n  } */\n}\n\n.ant-col-3 {\n  width: 33%;\n}\n\n.ant-font-2 {\n  font-size: 13px;\n}\n.dashboard-analysis-iconGroup {\n  i {\n    margin-left: 16px;\n    color: rgba(0, 0, 0, 0.45);\n    cursor: pointer;\n    transition: color 0.32s;\n    color: black;\n  }\n}\n.analysis-salesTypeRadio {\n  position: absolute;\n  right: 54px;\n  bottom: 12px;\n}\n\n.timeRadioGroup {\n  margin-left: 54px;\n}\n\n.timeRadioButtons.ant-radio-button-wrapper::before {\n  display: none;\n  visibility: hidden;\n}\n.timeRadioButtons {\n  border: none;\n}\n.timeRadioGroup {\n  margin-left: 54px;\n  border: none;\n}\n.ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n  z-index: 1;\n  color: #1890ff;\n  background: #fff;\n  border-color: #ffffff;\n  -webkit-box-shadow: -1px 0 0 0 #ffffff;\n  box-shadow: -1px 0 0 0 #ffffff;\n}\n.affixed {\n  padding: 12px;\n  background-color: #e6f7ff;\n  -webkit-transition: background-color 300ms linear;\n  -ms-transition: background-color 300ms linear;\n  transition: background-color 300ms linear;\n}\n.affix {\n  padding: 12px;\n  background-color: white;\n  -webkit-transition: background-color 300ms linear;\n  -ms-transition: background-color 300ms linear;\n  transition: background-color 300ms linear;\n}\n</style>\n"],"sourceRoot":"src/views/dashboard"}]}