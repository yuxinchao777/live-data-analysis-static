{"remainingRequest":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js!/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamember.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamember.vue","mtime":1635854526355},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1640003217818},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1640003225539}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgYXhpb3MgfSBmcm9tICdAL3V0aWxzL3JlcXVlc3QnOwppbXBvcnQgeyBtZXRob2QgfSBmcm9tICdsb2Rhc2gnOwp2YXIgY29sdW1ucyA9IFt7CiAgdGl0bGU6ICdpZCcsCiAgd2lkdGg6IDMwLAogIGRhdGFJbmRleDogJ2lkJywKICBrZXk6ICdpZCcKfSwgewogIHRpdGxlOiAn5aeT5ZCNJywKICB3aWR0aDogMzAsCiAgZGF0YUluZGV4OiAnbmFtZScsCiAga2V5OiAnbmFtZScKfSwgewogIHRpdGxlOiAn5p2D6YeNJywKICB3aWR0aDogMzAsCiAgZGF0YUluZGV4OiAnb3JkZXJJZCcsCiAga2V5OiAnb3JkZXJJZCcKfSwgewogIHRpdGxlOiAn5YiX6KGo5pi+56S6JywKICB3aWR0aDogMzAsCiAgZGF0YUluZGV4OiAndXNlclR5cGUnLAogIGtleTogJ3VzZXJUeXBlJwp9LCB7CiAgdGl0bGU6ICfmk43kvZwnLAogIGtleTogJ3Rhc2tEZXRhaWwnLAogIHdpZHRoOiAyNTAsCiAgc2NvcGVkU2xvdHM6IHsKICAgIGN1c3RvbVJlbmRlcjogJ2FjdGlvbicKICB9Cn1dOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbHVtbnM6IGNvbHVtbnMsCiAgICAgIHFhZGF0YTogW10sCiAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICBtb2RlbGlkOiAiIiwKICAgICAgbW9kZWxvcmRlcjogIiIsCiAgICAgIG1vZGVsbmFtZTogIiIsCiAgICAgIG1vZGVsdXNlclR5cGU6IHRydWUKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICB0aGlzLmdldG1lbWJlcmRhdGEoKTsKICAgIH0sCiAgICBnZXRtZW1iZXJkYXRhOiBmdW5jdGlvbiBnZXRtZW1iZXJkYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICB2YXIgcGFyYW1zID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIHBhcmFtcy5hcHBlbmQoIkRlcGFydG1lbnQiLCAicWEiKTsKICAgICAgYXhpb3MucG9zdCgnL3F1ZXJ5RW1wbG95ZWUnLCBwYXJhbXMsIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGEnCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIF90aGlzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgcmVzcG9uc2UuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIGlmIChpdGVtLnVzZXJUeXBlID09PSAiMSIpIHsKICAgICAgICAgICAgICBpdGVtLnVzZXJUeXBlID0gIuaYryI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgaXRlbS51c2VyVHlwZSA9ICLlkKYiOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICAgIF90aGlzLnFhZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBfdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WGhee9keaVsOaNruiOt+WPluWksei0pScpOwogICAgICB9KTsKICAgIH0sCiAgICBzaG93TW9kYWw6IGZ1bmN0aW9uIHNob3dNb2RhbChpZCwgbmFtZSwgdXNlclR5cGUsIG9yZGVyKSB7CiAgICAgIHRoaXMubW9kZWxpZCA9IGlkOwogICAgICB0aGlzLm1vZGVsbmFtZSA9IG5hbWU7CiAgICAgIHRoaXMubW9kZWxvcmRlciA9IG9yZGVyOwoKICAgICAgaWYgKHVzZXJUeXBlID09PSAi5pivIikgewogICAgICAgIHRoaXMubW9kZWx1c2VyVHlwZSA9IDE7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5tb2RlbHVzZXJUeXBlID0gMDsKICAgICAgfQoKICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlID0gIiI7CiAgICAgIHRoaXMudmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgaGFuZGxlT2s6IGZ1bmN0aW9uIGhhbmRsZU9rKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBwYXJhbXMgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgcGFyYW1zLmFwcGVuZCgiaWQiLCB0aGlzLm1vZGVsaWQpOwogICAgICBwYXJhbXMuYXBwZW5kKCJvcmRlcklkIiwgdGhpcy5tb2RlbG9yZGVyKTsKICAgICAgcGFyYW1zLmFwcGVuZCgidXNlclR5cGUiLCBOdW1iZXIodGhpcy5tb2RlbHVzZXJUeXBlKSk7CiAgICAgIGF4aW9zLnBvc3QoJy9lZGl0RW1wbG95ZWUnLCBwYXJhbXMsIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGEnCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIF90aGlzMi4kbWVzc2FnZS5zdWNjZXNzKCfmj5DkuqTmiJDlip8nKTsKCiAgICAgICAgICBfdGhpczIudmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgIF90aGlzMi5pbml0KCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi4kbWVzc2FnZS5lcnJvcign5o+Q5Lqk5aSx6LSlJyk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBfdGhpczIuaXNMb2FkaW5nID0gZmFsc2U7CgogICAgICAgIF90aGlzMi4kbWVzc2FnZS5lcnJvcign5YaF572R5pWw5o2u6I635Y+W5aSx6LSlJyk7CiAgICAgIH0pOwogICAgfSwKICAgIG9uQ2xvc2U6IGZ1bmN0aW9uIG9uQ2xvc2UoKSB7CiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5vdmVyZmxvd1kgPSAib3ZlcmxheSI7CiAgICB9LAogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGNoZWNrZWQpIHsKICAgICAgbW9kZWx1c2VyVHlwZSA9IGNoZWNrZWQ7CiAgICB9CiAgfSwKICBjb21wdXRlZDoge30sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuaW5pdCgpOwogIH0KfTs="},{"version":3,"sources":["qamember.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <h1>qa人员配置</h1>\n        <a-table\n      :columns=\"columns\"\n      :data-source=\"qadata\"\n      style=\"margin-top: 20px;\"\n      :loading=\"isLoading\"\n      :pagination=\"{ defaultPageSize: 100 }\"\n    >\n      <div slot=\"action\" slot-scope=\"text, record\">\n        <div>\n            <a-button type=\"primary\" @click=\"showModal(record.id,record.name,record.userType,record.orderId)\">编辑</a-button>\n        </div>\n      </div>\n    </a-table>\n    <div>\n    <a-modal v-model=\"visible\" title=\"编辑\" @ok=\"handleOk\"  :afterClose=\"onClose\">\n                <p>姓名: {{modelname}}</p>\n                <p>权重: <a-input-number\n                        placeholder=\"权重\" \n                        style=\"width:80px;\" \n                        v-model=modelorder\n                        /> </p>\n                <p>显示: <a-switch v-model=modeluserType @change=\"onChange\"  /></p>\n    </a-modal>\n    </div>\n    </div>\n</template>\n<script>\nimport { axios } from '@/utils/request'\nimport { method } from 'lodash'\n\nconst columns = [\n  { title: 'id', width: 30, dataIndex: 'id', key: 'id' },\n  { title: '姓名', width: 30, dataIndex: 'name', key: 'name' },\n  { title: '权重', width: 30, dataIndex: 'orderId', key: 'orderId' },\n  { title: '列表显示', width: 30, dataIndex: 'userType', key: 'userType' },\n  {\n    title: '操作',\n    key: 'taskDetail',\n    width: 250,\n    scopedSlots: { customRender: 'action' },\n  },\n]\n\n\nexport default {\n  data() {\n    return {\n      columns,\n      qadata:[],\n      visible: false,\n      modelid:\"\",\n      modelorder:\"\",\n      modelname:\"\",\n      modeluserType:true\n    }\n  },\n  \n  methods : {\n    init(){\n        this.getmemberdata()\n    },\n    getmemberdata(){\n        this.isLoading = true\n        let params = new FormData()\n        params.append(\"Department\",\"qa\")\n        axios\n        .post('/queryEmployee', params,{headers: {'Content-Type': 'multipart/form-data'}})\n        .then((response) => {\n          if (response.code === 200) {\n            this.isLoading = false\n            response.data.forEach(item=>{\n                if (item.userType===\"1\"){\n                    item.userType = \"是\"}\n                else{\n                    item.userType = \"否\"\n                }\n                })\n            this.qadata = response.data\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    showModal(id,name,userType,order) {\n        this.modelid = id\n        this.modelname = name\n        this.modelorder=order\n        if(userType === \"是\"){\n            this.modeluserType=1\n        }\n        else{\n            this.modeluserType=0\n        }\n\n        document.documentElement.style = \"\";\n        this.visible = true;\n    },\n    handleOk() {\n        let params = new FormData()\n        params.append(\"id\",this.modelid)\n        params.append(\"orderId\",this.modelorder)\n        params.append(\"userType\",Number(this.modeluserType))\n        axios\n        .post('/editEmployee', params,{headers: {'Content-Type': 'multipart/form-data'}})\n        .then((response) => {\n          if (response.code === 200) {\n              this.$message.success('提交成功')\n            this.visible = false;\n            this.init()\n          }\n          else{\n              this.$message.error('提交失败')\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n    onClose() {\n        document.documentElement.style.overflowY = \"overlay\";\n    },\n    onChange(checked) {\n        modeluserType = checked\n        \n    },\n    \n\n  },\n  computed: {},\n  created() {\n    this.init()\n  },\n}\n</script>\n\n<style scoped>\n\n\n</style>\n"],"sourceRoot":"src/views/qadata"}]}