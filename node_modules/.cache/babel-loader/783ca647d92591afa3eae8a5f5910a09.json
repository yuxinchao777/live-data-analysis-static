{"remainingRequest":"/Users/momo/code/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js!/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/code/vue/live-data-analysis-static/src/views/qadata/qadata.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/code/vue/live-data-analysis-static/src/views/qadata/qadata.vue","mtime":1649760928562},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1647586199048},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1647848746451},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1647586199048},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1647848754116}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["qadata.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div v-if=\"showtable\">\n    <div>\n      <!--业务线下拉框-->\n      <a-select default-value=\"商业技术部\" style=\"width: 150px; margin-left: 5px\">\n        <a-select-option\n          v-for=\"group in qadata_groups\"\n          :key=\"group.groupId\"\n          :value=\"group.groupName\"\n          @click=\"setgroupid(group.groupId)\"\n        >\n          {{ group.groupName }}\n        </a-select-option>\n      </a-select>\n\n      <!--项目下拉框-->\n      <a-select default-value=\"所有业务线\" style=\"width: 150px; margin-left: 20px\" :value=\"setprojectname\">\n        <a-select-option\n          v-for=\"project in qadata_projects\"\n          :key=\"project.projectId\"\n          :value=\"project.projectName\"\n          @click=\"setprojectid(project.projectId)\"\n        >\n          {{ project.projectName }}\n        </a-select-option>\n      </a-select>\n\n      <!--时间选择框-->\n      <a-range-picker class=\"a-range-picker\" style=\"width: 400px\" show-time v-model=\"dateRange\">\n        <template slot=\"renderExtraFooter\"> 日期选择</template>\n      </a-range-picker>\n      <!--查询按钮-->\n      <a-button type=\"primary\" icon=\"search\" @click=\"getneedtimelist(dateRange)\"> 查询 </a-button>\n    </div>\n\n    <!--表格-->\n    <a-table\n      :columns=\"columns\"\n      :data-source=\"qadata\"\n      style=\"margin-top: 20px\"\n      :loading=\"isLoading\"\n      :scroll=\"{ x: 1500 }\"\n      :pagination=\"{ defaultPageSize: 100 }\"\n    >\n      <!-- 提交Bug数量 -->\n      <div slot=\" \" slot-scope=\"text, record\">\n        <!--        {{record.details}}-->\n        <div v-if=\"record.taskDetail && record.taskDetail.length\">\n          <a v-for=\"(detail, index) in record.taskDetail\" :key=\"index\" @click=\"jumpto(detail && detail.taskUrl)\">\n            <span class=\"record-text\" style=\"margin-top: 20px; margin-bottom: 20px\">\n              <span style=\"color: rgb(0, 209, 178)\">[{{ detail.jobHour }}H]</span>\n              <span>{{ detail.taskName }}</span>\n            </span>\n          </a>\n        </div>\n        <div v-else>\n          <a>无</a>\n        </div>\n      </div>\n\n      <!-- 线上Bug详情列表 -->\n      <div slot=\" \" slot-scope=\"text, record\">\n        <!--        {{record.details}}-->\n        <div v-if=\"record.taskDetail && record.taskDetail.length\">\n          <a v-for=\"(detail, index) in record.taskDetail\" :key=\"index\" @click=\"jumpto(detail && detail.taskUrl)\">\n            <span class=\"record-text\" style=\"margin-top: 20px; margin-bottom: 20px\">\n              <span style=\"color: rgb(0, 209, 178)\">[{{ detail.jobHour }}H]</span>\n              <span>{{ detail.taskName }}</span>\n            </span>\n          </a>\n        </div>\n        <div v-else>\n          <a>无</a>\n        </div>\n      </div>\n\n      <!-- 任务详情列表 -->\n      <div slot=\"taskDetail\" slot-scope=\"text, record\">\n        <!--        {{record.details}}-->\n        <div v-if=\"record.taskDetail && record.taskDetail.length\">\n          <a v-for=\"(detail, index) in record.taskDetail\" :key=\"index\" @click=\"jumpto(detail && detail.taskUrl)\">\n            <span class=\"record-text\" style=\"margin-top: 20px; margin-bottom: 20px\">\n              <span style=\"color: rgb(0, 209, 178)\">[{{ detail.jobHour }}H]</span>\n              <span>{{ detail.taskName }}</span>\n            </span>\n          </a>\n        </div>\n        <div v-else>\n          <a>无</a>\n        </div>\n      </div>\n    </a-table>\n    </div>\n    <div>test</div>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport 'moment/locale/zh-cn'\nimport { axios } from '@/utils/request'\n\nconst columns = [\n  { title: '技术线', width: 30, dataIndex: 'groupNmae', key: 'groupNmae' },\n  { title: '业务线', width: 30, dataIndex: 'projectName', key: 'projectName' },\n  { title: '姓名', width: 40, dataIndex: 'name', key: 'name' },\n  { title: '用例编写行数', width: 30, dataIndex: 'caseNum', key: 'caseNum' },\n  { title: '用例执行天数', width: 30, dataIndex: 'jobDay', key: 'jobDay' },\n  {\n    title: '提交bug数量',\n    dataIndex: 'bugNum',\n    width: 100,\n    scopedSlots: { customRender: 'bugNum' },\n    sorter: (a, b) => a.bugNum - b.bugNum \n  },\n  // { title: '工时（H）', width: 30, dataIndex: 'jobHour', key: 'jobHour' },\n  // { title: '用例执行天数', width: 30, dataIndex: 'jobDay', key: 'jobDay' },\n  // { title: '用例编写行数', width: 30, dataIndex: 'caseNum', key: 'caseNum', sorter: (a, b) => a.caseNum - b.caseNum },\n  // { title: 'bug数', width: 30, dataIndex: 'bugNum', key: 'bugNum', sorter: (a, b) => a.bugNum - b.bugNum },\n\n  { title: '线上bug数量', width: 30, dataIndex: 'jobDay', key: 'jobDay' },\n  {\n    title: '线上Bug详情列表',\n    dataIndex: 'onlinebugdetail',\n    width: 100,\n    scopedSlots: { customRender: 'onlinebugdetail' },\n  },\n  {\n    title: '任务详情列表',\n    dataIndex: 'taskDetail',\n    width: 250,\n    scopedSlots: { customRender: 'taskDetail' },\n  },\n]\n\nexport default {\n  //测试效能\n  name: 'qadata',\n  data() {\n    return {\n      //表头\n      columns,\n\n      //列表数据\n      qadata: [],\n\n      //技术部\n      qadata_groups: [],\n\n      //业务线\n      qadata_projects: [],\n\n      //小组和业务线\n      qadatas: [],\n\n      //项目id\n      setprojectId: 0,\n\n      //设置项目名称\n      setprojectname: '所有业务线',\n\n      //业务线id\n      setgroupId: 0,\n\n      //时间框\n      dateRange: [],\n\n      isLoading: false,\n\n      showtable : false\n    }\n  },\n\n  methods: {\n    init() {\n\n      //获取业务线\n      this.getproject()\n\n      //周一 周日\n      const monday = this.dayjs().startOf('week').add(1, 'day')\n      const sunday = this.dayjs().endOf('week').add(1, 'day')\n\n      //时间转moment对象\n      this.dateRange = [\n        moment(monday.format('dddd MMM DD YYYY HH:mm:ss ZZ')),\n        moment(sunday.format('dddd MMM DD YYYY HH:mm:ss ZZ')),\n      ]\n\n      let temptime = [monday.format('YYYY-MM-DD HH:mm:ss'), sunday.format('YYYY-MM-DD HH:mm:ss')]\n      this.getqadate(temptime[0], temptime[1])\n    },\n    getqadate(starttime, endtime) {\n      this.isLoading = true\n      axios\n        .post('/qaStatistics', {\n          groupId: this.setgroupId,\n          projectId: this.setprojectId,\n          startTime: starttime,\n          endTime: endtime,\n        })\n        .then((response) => {\n          if (response.code === 200) {\n            this.isLoading = false\n            response.data.forEach((item) => {\n              item.jobHour = item.jobHour.toFixed(2)\n            })\n            this.qadata = response.data\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    //获取业务线和项目\n    getproject() {\n      axios\n        .get('/project/query')\n        .then((response) => {\n          if (response.code === 200) {\n            this.qadatas = response.data\n\n            var qadata_groups = new Array()\n            var qadata_projects = new Array()\n\n            qadata_groups.push({ groupId: 0, groupName: '商业技术部' })\n\n            qadata_projects.push({ projectId: 0, projectName: '所有业务线' })\n            //获取所有业务线\n            response.data.forEach((groupitem) => {\n              qadata_groups.push({ groupId: groupitem.groupId, groupName: groupitem.groupName })\n\n              //获取所有项目\n              groupitem.projectList.forEach((projectitem) => {\n                qadata_projects.push({ projectId: projectitem.projectId, projectName: projectitem.projectName })\n              })\n            })\n            this.qadata_groups = qadata_groups\n            this.qadata_projects = qadata_projects\n            this.allproject = qadata_projects\n            \n          }\n        })\n        .catch((error) => {\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    //设置查询技术部的id\n    setgroupid(groupid) {\n      this.setgroupId = groupid\n      //项目增加所有业务线\n      var temp = [{ projectId: 0, projectName: '所有业务线' }]\n      this.qadatas.forEach((item) => {\n        if (groupid === item.groupId) {\n          this.qadata_projects = temp.concat(item.projectList)\n        } else if (groupid === 0) {\n          this.qadata_projects = this.allproject\n        }\n      })\n      //重置业务线名称和id\n      this.setprojectname = '所有业务线'\n      this.setprojectId = 0\n    },\n\n    //设置查询技术部id\n    setprojectid(projectid) {\n      this.setprojectId = projectid\n      this.qadata_projects.forEach((item) => {\n        if (projectid === item.projectId) {\n          this.setprojectname = item.projectName\n        }\n      })\n    },\n\n    getneedtimelist(dateRange) {\n      if (dateRange.length === 0) {\n        this.$message.info('时间不能为空')\n      }\n\n      let currentStartTime = this.dayjs(dateRange[0].valueOf()).format('YYYY-MM-DD HH:mm:ss')\n      let currentEndTime = this.dayjs(dateRange[1].valueOf()).format('YYYY-MM-DD HH:mm:ss')\n      this.getqadate(currentStartTime, currentEndTime)\n    },\n    jumpto(hrefhost) {\n      window.open(hrefhost)\n    },\n    getcurrenttime(rangetime) {\n      const starttime = this.dayjs(rangetime[0]).format('YYYY-MM-DD HH:mm:ss')\n      const endtime = this.dayjs(rangetime[1]).format('YYYY-MM-DD HH:mm:ss')\n      return [starttime, endtime]\n    },\n  },\n  computed: {},\n  created() {\n    this.init()\n  },\n}\n</script>\n\n<style scoped>\n.a-range-picker {\n  margin-left: 20px;\n  margin-right: 20px;\n}\n\na {\n  display: inline-block;\n  height: 22px;\n  line-height: 22px;\n}\n\na:hover {\n  /* text-decoration: underline; */\n  border-bottom: 1px solid #409eff;\n}\n</style>"],"sourceRoot":"src/views/qadata"}]}