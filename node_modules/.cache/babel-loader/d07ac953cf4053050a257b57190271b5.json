{"remainingRequest":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js!/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/vue/live-data-analysis-static/src/views/dashboard/BusinessAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/vue/live-data-analysis-static/src/views/dashboard/BusinessAnalysis.vue","mtime":1626864386284},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1626939577610},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1626939590555}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BusinessAnalysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 项目数量 -->\n    <a-card :loading=\"loading\" :bordered=\"false\" :body-style=\"{ padding: '0' }\">\n      <div class=\"salesCard\">\n        <a-tabs default-active-key=\"1\" size=\"large\" :tab-bar-style=\"{ marginBottom: '24px', paddingLeft: '16px' }\">\n          <div class=\"extra-wrapper\" slot=\"tabBarExtraContent\">\n            <a-affix :offset-top=\"10\" @change=\"affixChanged\">\n              <div :class=\"affixed ? 'affixed' : 'affix'\">\n                <div class=\"extra-item\">\n                  <a-radio-group :value=\"currentPeriod\" class=\"timeRadioGroup\" @change=\"handleTimeChange\">\n                    <a-radio-button\n                      v-for=\"(time, index) in timeOptions\"\n                      :key=\"index\"\n                      :value=\"time.value\"\n                      class=\"timeRadioButtons\"\n                    >\n                      {{ time.name }}\n                    </a-radio-button>\n                  </a-radio-group>\n                </div>\n                <a-range-picker\n                  :disabled-date=\"disabledDate\"\n                  @change=\"handleDateRangeChange\"\n                  :style=\"{ width: '256px', 'margin-right': '24px' }\"\n                  :value=\"dateRange\"\n                />\n              </div>\n            </a-affix>\n          </div>\n          <a-tab-pane tab=\"项目数量\" key=\"1\">\n            <a-row>\n              <!-- 必须保证相同类型组件的ID为字符串且不一致，否则组件内render渲染会有问题！！！ -->\n              <a-col :span=\"12\">\n                <a-card :bordered=\"false\" class=\"datacard\" title=\"项目统计\">\n                  <AntBar\n                    :id=\"'busiBar' + businessKey\"\n                    :data=\"businessData\"\n                    :isStack=\"false\"\n                    :isGroup=\"true\"\n                    xField=\"project\"\n                    yField=\"count\"\n                    seriesField=\"name\"\n                  />\n                </a-card>\n              </a-col>\n              <a-col :span=\"12\">\n                <a-card :bordered=\"false\" class=\"datacard\" title=\"人力统计\">\n                  <AntLine\n                    id=\"development\"\n                    :data=\"developmentHours\"\n                    xField=\"projectName\"\n                    yField=\"jobDays\"\n                    seriesField=\"taskType\"\n                  />\n                </a-card>\n              </a-col>\n            </a-row>\n          </a-tab-pane>\n        </a-tabs>\n      </div>\n    </a-card>\n    <br />\n\n    <!-- 业务数据 -->\n    <a-card :loading=\"loading\" :bordered=\"false\" :body-style=\"{ paddingLeft: '16px' }\">\n      <div class=\"salesCard\">\n        <a-tabs default-active-key=\"1\" size=\"large\" :tab-bar-style=\"{ marginBottom: '24px', paddingLeft: '16px' }\">\n          <a-tab-pane tab=\"业务数据\" key=\"1\">\n            <a-row :gutter=\"36\">\n              <a-col :style=\"{ marginBottom: '24px' }\" :span=\"7\">\n                <chart-card :loading=\"loading\" title=\"项目总数\" :total=\"functionRank.sumFunciton\">\n                  <a-tooltip title=\"所有业务线需求总数\" slot=\"action\">\n                    <a-icon type=\"info-circle-o\" />\n                  </a-tooltip>\n                  <div>\n                    <span slot=\"term\" style=\"color: #ff0000\"\n                      >A1:{{ functionRank.A1 }} A2:{{ functionRank.A2 }} A3:{{ functionRank.A3 }} A4:{{\n                        functionRank.A4\n                      }}\n                    </span>\n                  </div>\n                  <template slot=\"footer\">\n                    <trend\n                      :flag=\"functionRank.trend === 'up' ? 'up' : 'down'\"\n                      :style=\"{\n                        visibility: functionRank.trend == 'hide' ? 'hidden' : 'visible',\n                        'margin-right': '16px',\n                      }\"\n                    >\n                      <span slot=\"term\">{{ reletiveText }}</span>\n                      {{ functionRank.FunctionChainComparison }}\n                    </trend>\n                  </template>\n                </chart-card>\n              </a-col>\n              <a-col :span=\"7\" :style=\"{ marginBottom: '24px' }\">\n                <chart-card :loading=\"loading\" title=\"开发饱和度\" :total=\"rdSaturation.rdSaturation\">\n                  <a-tooltip placement=\"topLeft\" title=\"需求开发工时总和/(工作日*测试人数)\" slot=\"action\">\n                    <a-icon type=\"info-circle-o\" />\n                  </a-tooltip>\n                  <div>\n                    <mini-progress\n                      color=\"rgb(19, 194, 194)\"\n                      :target=\"100\"\n                      :percentage=\"rdSaturation.rdSaturationNum\"\n                      height=\"8px\"\n                    />\n                  </div>\n                  <template slot=\"footer\">\n                    <trend\n                      :flag=\"rdSaturation.trend === 'up' ? 'up' : 'down'\"\n                      :style=\"{\n                        visibility: rdSaturation.trend == 'hide' ? 'hidden' : 'visible',\n                        'margin-right': '16px',\n                      }\"\n                    >\n                      <span slot=\"term\">{{ reletiveText }}</span>\n                      {{ rdSaturation.changeSaturation }}\n                    </trend>\n                  </template>\n                </chart-card>\n              </a-col>\n              <a-col :style=\"{ marginBottom: '24px' }\" :span=\"7\">\n                <chart-card :loading=\"loading\" title=\"测试饱和度\" :total=\"qaSaturation.qaSaturation\">\n                  <a-tooltip placement=\"topLeft\" title=\"项目累计测试人日/(工作日*测试人数)\" slot=\"action\">\n                    <a-icon type=\"info-circle-o\" />\n                  </a-tooltip>\n                  <div>\n                    <mini-progress\n                      color=\"rgb(19, 194, 194)\"\n                      :target=\"100\"\n                      :percentage=\"qaSaturation.qaSaturationNum\"\n                      height=\"8px\"\n                    />\n                  </div>\n                  <template slot=\"footer\">\n                    <trend\n                      :flag=\"qaSaturation.trend === 'up' ? 'up' : 'down'\"\n                      :style=\"{\n                        visibility: qaSaturation.trend == 'hide' ? 'hidden' : 'visible',\n                        'margin-right': '16px',\n                      }\"\n                    >\n                      <span slot=\"term\">{{ reletiveText }}</span>\n                      {{ qaSaturation.changeSaturation }}\n                    </trend>\n                  </template>\n                </chart-card>\n              </a-col>\n            </a-row>\n            <!-- 业务线表格 -->\n            <a-row>\n              <a-col :span=\"21\">\n                <div class=\"ant-table-wrapper\" style=\"margin-left: 40px\">\n                  <a-table\n                    row-key=\"projectName\"\n                    :columns=\"functionColumns\"\n                    :data-source=\"functionData\"\n                    :pagination=\"false\"\n                  >\n                    <template slot=\"rdSumJobDays\" slot-scope=\"record\">\n                      <span>\n                        {{ getFixedNumber(record.rdSumJobDays) }}\n                      </span>\n                    </template>\n                    <template slot=\"qaSumJobDays\" slot-scope=\"record\">\n                      <span>\n                        {{ getFixedNumber(record.qaSumJobDays) }}\n                      </span>\n                    </template>\n                    <template slot=\"proportioOfDelayed\" slot-scope=\"record\">\n                      <div v-if=\"!inRange(record.proportioOfDelayed, 0, 0)\">\n                        <a-tooltip placement=\"top\" title=\"延期提测比例合格线为0%\">\n                          <span class=\"warningColumn\">\n                            {{ record.proportioOfDelayed }}\n                          </span>\n                        </a-tooltip>\n                      </div>\n                      <div v-else>\n                        {{ record.proportioOfDelayed }}\n                      </div>\n                    </template>\n                    <template slot=\"projectdetail\" slot-scope=\"record\">\n                      <a-button\n                        type=\"link\"\n                        style=\"color: #40a9ff\"\n                        @click=\"checkProjectDetail(record.projectId, record.projectName)\"\n                        >点击查看全部项目信息</a-button\n                      >\n                    </template>\n                  </a-table>\n                </div>\n              </a-col>\n            </a-row>\n          </a-tab-pane>\n        </a-tabs>\n      </div>\n    </a-card>\n\n    <div class=\"antd-pro-pages-dashboard-analysis-twoColLayout\" :class=\"!isMobile && 'desktop'\">\n      <a-row :gutter=\"24\" type=\"flex\" :style=\"{ marginTop: '24px' }\">\n        <a-col :span=\"24\">\n          <a-card class=\"antd-pro-pages-dashboard-analysis-salesCard\" :bordered=\"false\" :style=\"{ height: '100%' }\">\n            <div class=\"salesCard\">\n              <a-tabs\n                default-active-key=\"1\"\n                size=\"large\"\n                :tab-bar-style=\"{ marginBottom: '24px', paddingLeft: '16px' }\"\n              >\n                <a-tab-pane tab=\"质量数据\" key=\"1\" :style=\"{ paddingRight: '24px', paddingLeft: '24px' }\">\n                  <a-row :gutter=\"48\">\n                    <a-col :span=\"12\">\n                      <div>\n                        <a-radio-group\n                          v-model=\"status\"\n                          default-value=\"beta\"\n                          button-style=\"solid\"\n                          @change=\"handleBugEnvChange\"\n                        >\n                          <a-radio-button value=\"beta\">内网BUG数</a-radio-button>\n                          <a-radio-button value=\"prod\">外网BUG数</a-radio-button>\n                        </a-radio-group>\n                      </div>\n                      <br />\n                      <div style=\"padding-top: 72px\">\n                        <!-- 绑定key，修改key后强制刷新pie component 参考https://michaelnthiessen.com/force-re-render/-->\n                        <a-spin :spinning=\"tableLoading\">\n                          <pie\n                            :key=\"pieKey\"\n                            :data=\"pieData\"\n                            :height=\"248\"\n                            :lineWidth=\"30\"\n                            hasLegend\n                            :total=\"() => pieData.reduce((acc, item) => (acc += item.y), 0)\"\n                            :subTitle=\"currentEnv == 'beta' ? '内网BUG' : '外网BUG'\"\n                          />\n                        </a-spin>\n                      </div>\n                    </a-col>\n                    <a-col :span=\"12\">\n                      <a-card title=\"外网BUG级别汇总\" :bordered=\"false\">\n                        <bar2\n                          id=\"fault\"\n                          :data=\"faultData\"\n                          xField=\"projectName\"\n                          yField=\"sumBug\"\n                          seriesField=\"level\"\n                          :style=\"{ paddingBottom: '24px' }\"\n                      /></a-card>\n                    </a-col>\n                  </a-row>\n                  <!-- 测试质量表格 -->\n                  <a-row>\n                    <a-col :span=\"21\">\n                      <div class=\"ant-table-wrapper\" style=\"margin-left: 5px\">\n                        <a-table\n                          row-key=\"projectName\"\n                          :columns=\"qualityColumns\"\n                          :data-source=\"qualityData\"\n                          :pagination=\"false\"\n                          :loading=\"tableLoading\"\n                        >\n                          <template slot=\"rdTestQuality\" slot-scope=\"record\">\n                            <div v-if=\"!inRange(record.rdTestQuality, 90, 100)\">\n                              <a-tooltip placement=\"top\" title=\"开发提测质量合格线为90%\">\n                                <span class=\"warningColumn\">\n                                  {{ record.rdTestQuality }}\n                                </span>\n                              </a-tooltip>\n                            </div>\n                            <div v-else>\n                              {{ record.rdTestQuality }}\n                            </div>\n                          </template>\n                          <template slot=\"bugResolutionRate\" slot-scope=\"record\">\n                              <div v-if=\"!inRange(record.bugResolutionRate, 90, 100)\">\n                              <a-tooltip placement=\"top\" title=\"BUG解决率合格线为90%\">\n                                <span class=\"warningColumn\">\n                                  {{ record.bugResolutionRate }}\n                                </span>\n                              </a-tooltip>\n                            </div>\n                            <div v-else>\n                              {{ record.bugResolutionRate }}\n                            </div>\n                          </template>\n                          <template slot=\"qualitydetail\" slot-scope=\"record\">\n                            <a-button\n                              type=\"link\"\n                              style=\"color: #40a9ff\"\n                              @click=\"checkQualityDetail(record.projectId, record.projectName)\"\n                              >点击查看全部项目信息</a-button\n                            >\n                          </template>\n                        </a-table>\n                      </div>\n                    </a-col>\n                  </a-row>\n                </a-tab-pane>\n              </a-tabs>\n            </div>\n          </a-card>\n        </a-col>\n      </a-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axios } from '@/utils/request'\nimport moment from 'moment'\nimport { ChartCard, MiniArea, MiniBar, MiniProgress, Bar, Trend, NumberInfo, MiniSmoothArea } from '@/components'\nimport { baseMixin } from '@/store/app-mixin'\nimport Pie from '@/components/Charts/Pie'\nimport AntLine from '@/components/Charts/AntLine'\nimport AntBar from '@/components/Charts/AntBar'\nimport AntBullet from '@/components/Charts/AntBullet'\nimport bar2 from '@/components/Charts/Bar2'\nimport 'moment/locale/zh-cn'\n\nconst timePeriod = {\n  all: 'all',\n  year: 'year',\n  quarter: 'quarter',\n  month: 'month',\n  lastMonth: 'lastMonth',\n  custom: 'custom',\n}\n\nconst functionColumns = [\n  {\n    title: '业务线',\n    dataIndex: 'projectName',\n    key: 'projectName',\n    width: 100,\n  },\n  {\n    title: '项目数',\n    dataIndex: 'functionSum',\n    key: 'functionSum',\n  },\n  {\n    title: '开发人日',\n    key: 'rdSumJobDays',\n    scopedSlots: { customRender: 'rdSumJobDays' },\n  },\n  {\n    title: '测试人日',\n    key: 'qaSumJobDays',\n    scopedSlots: { customRender: 'qaSumJobDays' },\n  },\n  {\n    title: 'Case数',\n    dataIndex: 'caseCount',\n    key: 'caseCount',\n  },\n  {\n    title: '延期提测项目占比',\n    key: 'proportioOfDelayed',\n    align: 'center',\n    scopedSlots: { customRender: 'proportioOfDelayed' },\n  },\n  {\n    title: '详情',\n    key: 'projectdetail',\n    scopedSlots: { customRender: 'projectdetail' },\n    align: 'center',\n  },\n]\nconst qualityColumns = [\n  {\n    title: '业务线',\n    dataIndex: 'projectName',\n    key: 'projectName',\n    width: 100,\n  },\n  {\n    title: '内网BUG数',\n    dataIndex: 'sumBug',\n    key: 'sumBug',\n    align: 'center',\n  },\n  {\n    title: 'BUG解决率',\n    key: 'bugResolutionRate',\n    align: 'center',\n    scopedSlots: { customRender: 'bugResolutionRate' },\n  },\n  {\n    title: 'BUG率',\n    dataIndex: 'bugRate',\n    key: 'bugRate',\n    align: 'center',\n  },\n  {\n    title: '线上BUG数',\n    dataIndex: 'onlineBug',\n    key: 'onlineBug',\n    align: 'center',\n  },\n  {\n    title: '提测质量',\n    key: 'rdTestQuality',\n    align: 'center',\n    scopedSlots: { customRender: 'rdTestQuality' },\n  },\n  {\n    title: '详情',\n    key: 'qualitydetail',\n    align: 'center',\n    scopedSlots: { customRender: 'qualitydetail' },\n  },\n]\n\nconst searchUserData = []\nfor (let i = 0; i < 7; i++) {\n  searchUserData.push({\n    x: moment().add(i, 'days').format('YYYY-MM-DD'),\n    y: Math.ceil(Math.random() * 10),\n  })\n}\nconst searchUserScale = [\n  {\n    dataKey: 'x',\n    alias: '时间',\n  },\n  {\n    dataKey: 'y',\n    alias: '用户数',\n    min: 0,\n    max: 10,\n  },\n]\n\nconst searchTableColumns = [\n  {\n    dataIndex: 'index',\n    title: '',\n    width: 90,\n  },\n  {\n    dataIndex: 'keyword',\n    title: '搜索关键词',\n  },\n  {\n    dataIndex: 'count',\n    title: '用户数',\n  },\n  {\n    dataIndex: 'range',\n    title: '周涨幅',\n    align: 'right',\n    sorter: (a, b) => a.range - b.range,\n    scopedSlots: { customRender: 'range' },\n  },\n]\n\nexport default {\n  name: 'BusinessAnalysis',\n  mixins: [baseMixin],\n  components: {\n    ChartCard,\n    MiniArea,\n    MiniBar,\n    MiniProgress,\n    Bar,\n    Trend,\n    NumberInfo,\n    MiniSmoothArea,\n    Pie,\n    AntLine,\n    AntBar,\n    AntBullet,\n    bar2,\n  },\n  data() {\n    return {\n      timePeriod,\n      loading: true,\n      affixed: false,\n      status: 'beta',\n      pieKey: 0,\n      businessKey: 0,\n      functionData: [],\n      faultData: [],\n      functionColumns,\n      qualityData: [],\n      qualityColumns,\n      functionsum: 0,\n      reletiveText: '月环比',\n      pieStyle: {\n        stroke: '#fff',\n        lineWidth: 1,\n      },\n      functionRank: {\n        A1: 0,\n        A2: 0,\n        A3: 0,\n        A4: 0,\n        sumFunciton: 0,\n        lastNumSum: 0,\n        FunctionChainComparison: '0%',\n        trend: 'up',\n      },\n      rdSaturation: {\n        rdjobDays: 0,\n        workDays: 0,\n        rdLists: 0,\n        rdSaturation: '0.00%',\n        lrdSaturation: 0,\n        trend: 'up',\n        changeSaturation: '0.00%',\n        rdSaturationNum: 0,\n      },\n      qaSaturation: {\n        qajobDays: 0,\n        workDays: 0,\n        qaLists: 0,\n        qaSaturation: '0.00%',\n        trend: 'up',\n        lqaSaturation: 0.0,\n        changeSaturation: '0.00%',\n        qaSaturationNum: 0,\n      },\n      businessData: [],\n      developmentHours: [],\n      betaBugData: [],\n      prodBugData: [],\n      pieData: [\n        { x: '媒体', y: 0 },\n        { x: '社交&基础', y: 0 },\n        { x: '视频SC组', y: 0 },\n        { x: '营收产品', y: 0 },\n        { x: '营收活动', y: 0 },\n        { x: '增长', y: 0 },\n      ],\n      bulletData: [],\n      tableLoading: true,\n      currentEnv: 'beta',\n      currentType: 'all',\n      currentStartTime: this.getFirstDayOfMonth(),\n      currentEndTime: this.getEndOfMonth(),\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      dateRange: [],\n      currentPeriod: timePeriod.month,\n      typeOptions: [\n        { name: '全部', value: 'all' },\n        { name: '营收产品', value: 'products' },\n        { name: '营收活动', value: 'activity' },\n        { name: 'PK', value: 'pk' },\n        { name: '增长', value: 'increase' },\n        { name: '社交&内容', value: 'social' },\n        { name: '基础', value: 'basic' },\n      ],\n      timeOptions: [\n        { name: '上月', value: timePeriod.lastMonth },\n        { name: '本月', value: timePeriod.month },\n        { name: '本季度', value: timePeriod.quarter },\n        { name: '本年', value: timePeriod.year },\n      ],\n    }\n  },\n  watch: {\n    currentPeriod: function (val) {\n      console.log('currentPeriod watch', val)\n      if (val == this.timePeriod.month || val == this.timePeriod.lastMonth) {\n        this.reletiveText = '月环比'\n      }\n      if (val == this.timePeriod.quarter) {\n        this.reletiveText = '季环比'\n      }\n      if (val == this.timePeriod.year) {\n        this.reletiveText = '年环比'\n      }\n    },\n  },\n  created() {\n    this.init()\n    this.loading = false\n  },\n  mounted() {},\n  methods: {\n    init() {\n      let period = this.$store.state.app.period\n      this.currentPeriod = period.period\n      this.changeTime(this.currentPeriod)\n      if (period.start !== null && period.end !== null) {\n        this.currentStartTime = period.start\n        this.currentEndTime = period.end\n      }\n      this.dateRange = this.getDateRange()\n      this.getBusinessCount()\n      this.getDevelopmentHours()\n      this.getBetaBugCount()\n      this.getProdBugsCount()\n      this.getQualityData()\n      this.getFunctionData()\n      this.funcitonTotal()\n      this.getOverviewAnalysis()\n      this.getFaultData()\n    },\n    refreshData() {\n      this.tableLoading = true\n      console.log(\n        `refreshData: type = ${this.currentType}, stime = ${this.currentStartTime}, etime = ${this.currentEndTime}, period = ${this.currentPeriod}`\n      )\n      this.getBusinessCount()\n      this.getDevelopmentHours()\n      this.getBetaBugCount()\n      this.getProdBugsCount()\n      this.getOverviewAnalysis()\n      this.getFaultData()\n      this.getQualityData()\n      this.getFunctionData()\n      this.$store.commit('RECORD_PERIOD', {\n        period: this.currentPeriod,\n        start: this.currentStartTime,\n        end: this.currentEndTime,\n      })\n    },\n    //计算项目总数\n    funcitonTotal() {\n      axios\n        .post('/BusinessController/getBusinessVolume', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n        })\n        .then((response) => {\n          var functionsum = 0\n          response.data.forEach((e) => {\n            functionsum = functionsum + e.functionCount\n          })\n          this.functionsum = functionsum\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('计算项目总数错误')\n        })\n    },\n    //跳转质量数据详细页面\n    checkQualityDetail(projectId, projectName) {\n      this.$router.push({\n        path: '/dashboard/qualitydetail',\n        query: {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n          projectId: projectId,\n          projectName: projectName,\n        },\n      })\n    },\n    //跳转项目数据详细页面\n    checkProjectDetail(projectId, projectName) {\n      this.$router.push({\n        path: '/dashboard/projectdetail',\n        query: {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n          projectId: projectId,\n          projectName: projectName,\n        },\n      })\n    },\n    getFunctionData() {\n      axios\n        .post('/BusinessController/getQualityData', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n        })\n        .then((response) => {\n          this.functionData = response.data\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('业务数据获取失败')\n        })\n    },\n    /**\n     * 项目总数\n     * 开发饱和度\n     * 测试饱和度\n     */\n    getOverviewAnalysis() {\n      axios\n        .post('/BusinessController/overviewAnalysis', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n          period: this.currentPeriod,\n        })\n        .then((response) => {\n          var res = response.data\n          this.functionRank = res[0]\n          this.rdSaturation = res[1]\n          this.qaSaturation = res[2]\n          this.rdSaturation.rdSaturationNum = parseInt(this.rdSaturation.rdSaturation)\n          this.qaSaturation.qaSaturationNum = parseInt(this.qaSaturation.qaSaturation)\n          this.$nextTick(() => {\n            this.functionRank = res[0]\n            this.rdSaturation = res[1]\n            this.qaSaturation = res[2]\n          })\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('项目总数、开发饱和度、测试饱和度获取失败')\n        })\n    },\n    getQualityData() {\n      axios\n        .post('/BusinessController/getBetaBugCount', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n        })\n        .then((response) => {\n          let data = response.data\n          data.forEach((e) => {\n            if (!('onlineBug' in e)) {\n              e.onlineBug = 0\n            }\n          })\n          this.qualityData = response.data\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('质量数据获取失败')\n        })\n    },\n    /**\n     * 获取业务线下的需求数量和延期提测需求数量\n     * 项目数量-项目统计-柱形图\n     */\n    getBusinessCount() {\n      axios\n        .post('/BusinessController/getBusinessVolume', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n        })\n        .then((response) => {\n          let data = []\n          response.data.forEach((e) => {\n            data.push({\n              name: '项目数量',\n              project: e.project_name,\n              count: e.functionCount,\n            })\n            data.push({\n              name: '延期提测项目数量',\n              project: e.project_name,\n              count: e.delayCount,\n            })\n          })\n          this.businessData = data\n          this.businessKey += 1\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('项目统计数据获取失败')\n        })\n    },\n    /**\n     * 各个业务线下对应开发测试人日\n     * 项目数量-人力统计-折线图\n     */\n    getDevelopmentHours() {\n      axios\n        .post('/BusinessController/getDevelopmentHours', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n        })\n        .then((response) => {\n          let data = []\n          response.data.forEach((e) => {\n            data.push({\n              taskType: '开发人日',\n              projectName: e.ProjectName,\n              jobDays: e.rdjobDays,\n            })\n            data.push({\n              taskType: '测试人日',\n              projectName: e.ProjectName,\n              jobDays: e.qajobDays,\n            })\n          })\n          this.developmentHours = data\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('人力统计数据获取失败')\n        })\n    },\n    /**\n     * 质量数据-内网bug数\n     * 更新表格和饼形图\n     */\n    getBetaBugCount() {\n      axios\n        .post('/BusinessController/getBetaBugCount', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n        })\n        .then((response) => {\n          this.tableLoading = false\n          let data = response.data.map((item) => {\n            return { x: item.projectName, y: item.sumBug }\n          })\n          data = data.sort((a, b) => a.x.localeCompare(b.x, 'zh-CN'))\n          this.betaBugData = data\n          if (this.currentEnv == 'beta') {\n            this.pieData = data\n            // 饼图绑定的key增加1，强制re-render\n            this.pieKey += 1\n          }\n        })\n        .catch((error) => {\n          this.tableLoading = false\n          console.log(error)\n          this.$message.error('内网bug数据获取失败')\n        })\n    },\n    /**\n     * 质量数据-外网bug数\n     * 仅更新饼形图\n     */\n    getProdBugsCount() {\n      axios\n        .post('/VipOrderController/getVipOrder', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n        })\n        .then((response) => {\n          let data = response.data.map((item) => {\n            return { x: item.name, y: Number(item.value) }\n          })\n          data = data.sort((a, b) => a.x.localeCompare(b.x, 'zh-CN'))\n          this.prodBugData = data\n          if (this.currentEnv == 'prod') {\n            this.pieData = data\n            // 饼图绑定的key增加1，强制re-render\n            this.pieKey += 1\n          }\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('外网bug数据获取失败')\n        })\n    },\n    getVipOrderDuration() {\n      axios\n        .post('VipOrderController/getVipOrderDuration', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n        })\n        .then((response) => {\n          let data = response.data.map((item) => {\n            return {\n              businessTeam: item.businessTeam,\n              measures: [Number(item.respond), Number(item.duration)],\n              ranges: [24, 48, 72],\n              // ranges: [2, 8, 12],\n              target: 12,\n            }\n          })\n          data = data.sort((a, b) => a.businessTeam.localeCompare(b.businessTeam, 'zh-CN'))\n          this.bulletData = data\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('外网bug数据获取失败')\n        })\n    },\n    /**\n     * 质量数据\n     * 故障堆叠图\n     */\n    getFaultData() {\n      axios\n        .post('/BugTicketController/getBugTicketSummary', {\n          stime: this.currentStartTime,\n          etime: this.currentEndTime,\n        })\n        .then((response) => {\n          let data = []\n          response.data.forEach((e) => {\n            data.push({\n              sumBug: e.sumBug,\n              projectName: e.projectName,\n              level: e.level,\n            })\n          })\n          data = data.sort((a, b) => a.level.localeCompare(b.level, 'en-US'))\n          this.faultData = data\n        })\n        .catch((error) => {\n          console.log(error)\n          this.$message.error('故障数据获取失败')\n        })\n    },\n    /** 时间段变更。当月、当季度等 */\n    handleTimeChange(scope) {\n      let time = scope.target.value\n      this.changeTime(time)\n      console.log('time changed ' + time)\n      this.refreshData()\n    },\n    changeTime(time) {\n      switch (time) {\n        case 'lastMonth':\n          this.currentStartTime = this.getFirstDayOfLastMonth()\n          this.currentEndTime = this.getEndOfLastMonth()\n          this.currentPeriod = this.timePeriod.lastMonth\n          this.dateRange = this.getDateRange()\n          break\n        case 'month':\n          this.currentStartTime = this.getFirstDayOfMonth()\n          this.currentEndTime = this.getEndOfMonth()\n          this.currentPeriod = this.timePeriod.month\n          this.dateRange = this.getDateRange()\n          break\n        case 'year':\n          this.currentStartTime = this.getFirstDayOfYear()\n          this.currentEndTime = this.getEndOfMonth()\n          this.currentPeriod = this.timePeriod.year\n          this.dateRange = this.getDateRange()\n          break\n        case 'quarter':\n          this.currentStartTime = this.getFirstDayOfQuarter()\n          this.currentEndTime = this.getEndOfMonth()\n          this.currentPeriod = this.timePeriod.quarter\n          this.dateRange = this.getDateRange()\n          break\n        // TODO: all的时间段是多少？\n        case 'all':\n          this.currentStartTime = this.getFirstDayOfYear()\n          this.currentEndTime = this.getEndOfMonth()\n          this.currentPeriod = this.timePeriod.all\n          this.dateRange = this.getDateRange()\n          break\n        default:\n      }\n    },\n    /** bug环境变化 */\n    handleBugEnvChange(env) {\n      this.currentEnv = env.target.value\n      console.log('currentEnv', this.currentEnv)\n      if (env.target.value === 'beta') {\n        this.pieData = this.betaBugData\n      } else {\n        this.pieData = this.prodBugData\n      }\n      this.pieKey += 1\n    },\n    /** 日期选择器范围变化 */\n    handleDateRangeChange(range) {\n      this.currentStartTime = this.dayjs(range[0].valueOf()).startOf('day').format('YYYY-MM-DD HH:mm:ss')\n      this.currentEndTime = this.dayjs(range[1].valueOf()).endOf('day').format('YYYY-MM-DD HH:mm:ss')\n      this.currentPeriod = timePeriod.custom\n      this.refreshData()\n    },\n    // 获取初始时间，参考 https://day.js.org/docs/en/manipulate/start-of\n    /** 获取当月第一天的格式化时间戳 */\n    getFirstDayOfMonth() {\n      return this.dayjs().startOf('month').format('YYYY-MM-DD HH:mm:ss')\n    },\n    /** 获取当季度第一天的格式化时间戳 */\n    getFirstDayOfQuarter() {\n      return this.dayjs().startOf('quarter').format('YYYY-MM-DD HH:mm:ss')\n    },\n    /** 获取当自然年第一天的格式化时间戳 */\n    getFirstDayOfYear() {\n      return this.dayjs().startOf('year').format('YYYY-MM-DD HH:mm:ss')\n    },\n    /** 获取当天结束时间的格式化时间戳 */\n    getEndOfMonth() {\n      return this.dayjs().endOf('month').format('YYYY-MM-DD HH:mm:ss')\n    },\n    getFirstDayOfLastMonth() {\n      return this.dayjs().subtract(1, 'month').startOf('month').format('YYYY-MM-DD HH:mm:ss')\n    },\n    getEndOfLastMonth() {\n      return this.dayjs().subtract(1, 'month').endOf('month').format('YYYY-MM-DD HH:mm:ss')\n    },\n    formatNumberString(number) {\n      return Number(number).toLocaleString('en')\n    },\n    affixChanged() {\n      this.affixed = !this.affixed\n    },\n    disabledDate(current) {\n      // 不能选择今天之后的日期\n      return current && current > moment().endOf('day')\n    },\n    getFixedNumber(day) {\n      return Math.round(Number(day) * 100) / 100\n    },\n    getDateRange() {\n      console.log('getDateRange', this.currentStartTime, this.currentEndTime)\n      return [moment(this.currentStartTime, this.dateFormat), moment(this.currentEndTime, this.dateFormat)]\n    },\n    getNumberFromPercentString(str) {\n      let numStr = str.slice(0, -1)\n      return Number(numStr)\n    },\n    isWarningColor(record, floor, ceil) {\n      if (record === '-') {\n        return 'normalColumn'\n      }\n      if (!this.inRange(record, floor, ceil)) {\n        return 'warningColumn'\n      }\n      return 'normalColumn'\n    },\n    inRange(record, floor, ceil) {\n      if (record === '-') {\n        return true\n      }\n      let stat = this.getNumberFromPercentString(record)\n      return stat >= floor && stat <= ceil\n    },\n  },\n  computed: {},\n}\n</script>\n\n<style lang=\"less\" scoped>\n.warningColumn {\n  color: #ef3c59;\n  font-weight: bold;\n  padding: 5px;\n}\n.extra-wrapper {\n  line-height: 55px;\n  padding-right: 24px;\n\n  .extra-item {\n    display: inline-block;\n    margin-right: 24px;\n\n    a {\n      margin-left: 24px;\n    }\n  }\n}\n\n.affix {\n  padding-right: 24px;\n}\n\n.antd-pro-pages-dashboard-analysis-twoColLayout {\n  position: relative;\n  display: flex;\n  display: block;\n  flex-flow: row wrap;\n}\n\n.antd-pro-pages-dashboard-analysis-salesCard {\n  width: 100%;\n  height: calc(100% - 24px);\n  /* /deep/ .ant-card-head {\n    position: relative;\n  } */\n}\n\n.ant-col-3 {\n  width: 33%;\n}\n\n.dashboard-analysis-iconGroup {\n  i {\n    margin-left: 16px;\n    color: rgba(0, 0, 0, 0.45);\n    cursor: pointer;\n    transition: color 0.32s;\n    color: black;\n  }\n}\n.analysis-salesTypeRadio {\n  position: absolute;\n  right: 54px;\n  bottom: 12px;\n}\n\n.timeRadioButtons.ant-radio-button-wrapper::before {\n  display: none;\n  visibility: hidden;\n}\n.timeRadioButtons {\n  border: none;\n}\n.timeRadioGroup {\n  margin-left: 54px;\n  border: none;\n}\n.timeRadioButtons.ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n  z-index: 1;\n  color: #1890ff;\n  background: #fff;\n  border-color: #ffffff;\n  -webkit-box-shadow: -1px 0 0 0 #ffffff;\n  box-shadow: -1px 0 0 0 #ffffff;\n}\n\n.affixed {\n  background-color: #e6f7ff;\n  -webkit-transition: background-color 300ms linear;\n  -ms-transition: background-color 300ms linear;\n  transition: background-color 300ms linear;\n}\n.affix {\n  background-color: white;\n  -webkit-transition: background-color 300ms linear;\n  -ms-transition: background-color 300ms linear;\n  transition: background-color 300ms linear;\n}\n.datacard {\n  padding: 20px;\n}\n</style>\n"],"sourceRoot":"src/views/dashboard"}]}