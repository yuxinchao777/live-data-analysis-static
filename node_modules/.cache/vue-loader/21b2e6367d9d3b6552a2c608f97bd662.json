{"remainingRequest":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/code/vue/live-data-analysis-static/src/views/user/Register.vue?vue&type=template&id=30b8895d&scoped=true&","dependencies":[{"path":"/Users/momo/code/vue/live-data-analysis-static/src/views/user/Register.vue","mtime":1626864386000},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577000},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640003225000},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577000},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1640003225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}