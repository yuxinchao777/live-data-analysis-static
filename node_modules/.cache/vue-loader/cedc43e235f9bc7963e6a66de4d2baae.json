{"remainingRequest":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/vue/live-data-analysis-static/src/views/dashboard/BusinessAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/vue/live-data-analysis-static/src/views/dashboard/BusinessAnalysis.vue","mtime":1627383512150},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/thread-loader/dist/cjs.js","mtime":1626939577640},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1626939577610},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1626939590555}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}