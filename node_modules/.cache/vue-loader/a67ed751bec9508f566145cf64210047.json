{"remainingRequest":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/code/vue/live-data-analysis-static/src/views/qadata/qamemberdata.vue?vue&type=style&index=0&id=021df242&scoped=true&lang=css&","dependencies":[{"path":"/Users/momo/code/vue/live-data-analysis-static/src/views/qadata/qamemberdata.vue","mtime":1649731909968},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/css-loader/dist/cjs.js","mtime":1647848753997},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1647848754116},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/postcss-loader/src/index.js","mtime":1647586367416},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1647586199048},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1647848754116}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hLXJhbmdlLXBpY2tlciB7CiAgbWFyZ2luLWxlZnQ6IDIwcHg7CiAgbWFyZ2luLXJpZ2h0OiAyMHB4Owp9Ci5hbnQtdGFibGUgdGQgewogIHdoaXRlLXNwYWNlOiBub3dyYXA7Cn0KCi5lZGl0c3R5bGUgewogIHdpZHRoOiAyMDBweDsKICBtYXJnaW4tYm90dG9tOiAycHg7Cn0KCgoK"},{"version":3,"sources":["qamemberdata.vue"],"names":[],"mappingsiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"qamemberdata.vue","sourceRoot":"src/views/qadata","sourcesContent":["<template>\n  <div class=\"qamember-wrapper\">\n    <div>\n      <!--业务线下拉框-->\n      <a-select \n        default-value=\"商业技术部\" \n        style=\"width: 150px; margin-left: 5px; \">\n        <a-select-option\n          v-for=\"group in qadata_groups\"\n          :key=\"group.groupId\"\n          :value=\"group.groupName\"\n          @click=\"setgroupid(group.groupId)\"\n        >\n          {{ group.groupName }}\n        </a-select-option>\n      </a-select>\n\n      <!--项目下拉框-->\n      <a-select \n        default-value=\"所有业务线\"\n        style=\"width: 150px; margin-left: 20px; \"\n        :value=\"setprojectname\"\n      >\n        <a-select-option\n          v-for=\"project in qadata_projects\"\n          :key=\"project.projectId\"\n          :value=\"project.projectName\"\n          @click=\"setprojectid(project.projectId)\"\n        >\n          {{ project.projectName }}\n        </a-select-option>\n      </a-select>\n\n      <!--时间选择框-->\n      <a-range-picker class=\"a-range-picker\" style=\"width: 400px\" show-time v-model=\"dateRange\">\n        <template slot=\"renderExtraFooter\"> 日期选择</template>\n      </a-range-picker>\n      <!--查询按钮-->\n      <a-button type=\"primary\" icon=\"search\" @click=\"getdate(dateRange)\"> 查询 </a-button>\n    </div>\n    <h6>（备注：绿色：等于8h，红色：大于8h，黑色：小于8h，橘色：请假，粉色：假期）</h6>\n    <a-table\n      :columns=\"all_columns_data\"\n      :data-source=\"qadata\"\n      style=\"margin-top: 20px\"\n      :scroll=\"{ x: columns_len }\"\n      bordered\n      :pagination=\"{ defaultPageSize: 100 }\"\n    >\n      <div slot=\"action\" slot-scope=\"text, record\">\n        <!--tb内容-->\n        <div v-if=\"text.tbWorkContent && text.tbWorkContent.length && text.line_show === true\">\n          <a v-for=\"(detail, index) in text.tbWorkContent\" :key=\"index\" @click=\"jumpto(detail && detail.url)\">\n            <span class=\"record-text\" style=\"margin-top: 20px; margin-bottom: 20px\">\n              <span v-if=\"text.count === 8\" style=\"color: rgb(106, 168, 79)\">[{{ detail.hour }}H]</span>\n              <span v-if=\"text.count > 8\" style=\"color: rgb(205, 51, 51)\">[{{ detail.hour }}H]</span>\n              <span v-if=\"text.count < 8\" style=\"color: rgb(0, 0, 0)\">[{{ detail.hour }}H]</span>\n\n              <span v-if=\"text.count === 8\" style=\"color: rgb(106, 168, 79)\">{{ detail.content }}</span>\n              <span v-else-if=\"text.count > 8\" style=\"color: rgb(205, 51, 51)\">{{ detail.content }}</span>\n              <span v-else-if=\"text.count < 8\" style=\"color: rgb(0, 0, 0)\">{{ detail.content }}</span>\n\n              <span v-else-if=\"detail.work_type === 0\" style=\"color: rgb(205, 149, 12)\">{{ detail.content }}</span>\n              <span v-else style=\"color: rgb(238, 99, 99)\">{{ detail.content }}</span>\n            </span>\n            <br />\n          </a>\n        </div>\n\n        <!-- 分割线 -->\n        <hr v-if=\"text.line_show\" />\n\n        <!--自定义内容-->\n        <div>\n          <div v-if=\"text.workContents && text.workContents.length\">\n            <a v-for=\"(detail, index) in text.workContents\" :key=\"index\" @click=\"jumpto(detail && detail.url)\">\n              <span class=\"record-text\" style=\"margin-top: 20px; margin-bottom: 20px\">\n                <span\n                  v-if=\"detail.work_type === 1 && text.count === 8 && detail.content !== ''\"\n                  style=\"color: rgb(106, 168, 79)\"\n                  >[{{ detail.hour }}H]</span\n                >\n                <span\n                  v-else-if=\"detail.work_type === 1 && text.count > 8 && detail.content !== ''\"\n                  style=\"color: rgb(205, 51, 51)\"\n                  >[{{ detail.hour }}H]</span\n                >\n                <span\n                  v-else-if=\"detail.work_type === 1 && text.count < 8 && detail.content !== ''\"\n                  style=\"color: rgb(0, 0, 0)\"\n                  >[{{ detail.hour }}H]</span\n                >\n\n                <span v-if=\"detail.work_type === 1 && text.count === 8\" style=\"color: rgb(106, 168, 79)\">{{\n                  detail.content\n                }}</span>\n                <span v-else-if=\"detail.work_type === 1 && text.count > 8\" style=\"color: rgb(205, 51, 51)\">{{\n                  detail.content\n                }}</span>\n                <span v-else-if=\"detail.work_type === 1 && text.count < 8\" style=\"color: rgb(0, 0, 0)\">{{\n                  detail.content\n                }}</span>\n\n                <span v-else-if=\"detail.work_type === 0\" style=\"color: rgb(255, 20, 147)\">{{ detail.content }}</span>\n\n                <span v-else style=\"color: rgb(255, 127, 0)\">{{ detail.content }}</span>\n              </span>\n              <br />\n            </a>\n          </div>\n          <div>\n            <div style=\"margin-top: 10px\">\n              <a-button id=\"editbutton\" size=\"small\" @click=\"showModal(text.date, text.workContents, record.id)\"\n                >编辑</a-button\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n    </a-table>\n\n    <!-- 弹窗 -->\n    <div>\n      <a-modal v-model=\"visible\" title=\"编辑\" @ok=\"handleOk\" :afterClose=\"onClose\" width=\"800px\">\n        <div v-for=\"(item, index) in contenttask\" :key=\"index\" style=\"margin-top: 5px\">\n          <span width=\"100px\">工作内容: <a-input class=\"editstyle\" v-model=\"item.content\" /></span>\n          <span>链接地址: <a-input class=\"editstyle\" v-model=\"item.url\" /></span>\n          <span>工时: <a-input class=\"editstyle\" v-model=\"item.hour\" style=\"width: 50px\" /></span>\n          <span><a-button type=\"danger\" @click=\"deltask(index)\" style=\"margin-left: 5px\">删除</a-button></span>\n        </div>\n\n        <div>\n          <span><a-button type=\"primary\" @click=\"addtask()\">新增</a-button></span>\n          <span\n            ><a-button style=\"margin-left: 50px; margin-top: 10px\" type=\"primary\" @click=\"qingjia()\"\n              >请假</a-button\n            ></span\n          >\n        </div>\n      </a-modal>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport 'moment/locale/zh-cn'\nimport { axios } from '@/utils/request'\nimport { forEach } from 'store/storages/all'\n\nexport default {\n  //排期日报页面\n  name: 'qamemberdata',\n  data() {\n    return {\n      //小组\n      qadata_groups: [],\n\n      //业务线\n      qadata_projects: [],\n\n      //小组和业务线\n      qadatas: [],\n\n      //时间选择框\n      dateRange: [],\n\n      //项目id\n      setprojectId: 0,\n\n      //设置项目名称\n      setprojectname: '所有业务线',\n\n      //业务线id\n      setgroupId: 0,\n\n      //表头\n      all_columns_data: [],\n\n      //列表长度\n      columns_len: 0,\n\n      //列表数据\n      qadata: [],\n\n      //弹窗是否显示\n      visible: false,\n\n      //弹窗中的任务\n      contenttask: [],\n\n      //弹窗任务日期\n      edittaskdate: '',\n\n      //弹窗人的id\n      edituserid: '',\n    }\n  },\n\n  methods: {\n    init() {\n      this.getproject()\n\n      //周一 周日\n      const monday = this.dayjs().startOf('week').add(1, 'day')\n      const sunday = this.dayjs().endOf('week').add(1, 'day')\n\n      //时间转moment对象\n      this.dateRange = [\n        moment(monday.format('dddd MMM DD YYYY HH:mm:ss ZZ')),\n        moment(sunday.format('dddd MMM DD YYYY HH:mm:ss ZZ')),\n      ]\n      //let temptime = [monday.format('YYYY-MM-DD HH:mm:ss'), sunday.format('YYYY-MM-DD HH:mm:ss')]\n\n      this.getdate(this.dateRange)\n    },\n    //获取列表数据\n    getdate(dateRange) {\n      let temptime = [\n        this.dayjs(dateRange[0].valueOf()).format('YYYY/MM/DD HH:mm:ss'),\n        this.dayjs(dateRange[1].valueOf()).format('YYYY/MM/DD HH:mm:ss'),\n      ]\n      this.get_columns(temptime)\n      this.getneedtimelist(temptime)\n    },\n\n    //设置查询技术部的id\n    setgroupid(groupid) {\n      this.setgroupId = groupid\n\n      //项目增加所有业务线\n      var temp = [{ projectId: 0, projectName: '所有业务线' }]\n      this.qadatas.forEach((item) => {\n        if (groupid === item.groupId) {\n          this.qadata_projects = temp.concat(item.projectList)\n        } else if (groupid === 0) {\n          this.qadata_projects = this.allproject\n        }\n      })\n\n      //重置业务线名称和id\n      this.setprojectname = '所有业务线'\n      this.setprojectId = 0\n    },\n\n    //设置查询技术部id\n    setprojectid(projectid) {\n      this.setprojectId = projectid\n      this.qadata_projects.forEach((item) => {\n        if (projectid === item.projectId) {\n          this.setprojectname = item.projectName\n        }\n      })\n    },\n\n    //获取业务线和项目\n    getproject() {\n      axios\n        .get('/project/query')\n        .then((response) => {\n          if (response.code === 200) {\n            this.qadatas = response.data\n\n            var qadata_groups = new Array()\n            var qadata_projects = new Array()\n\n            qadata_groups.push({ groupId: 0, groupName: '商业技术部' })\n\n            qadata_projects.push({ projectId: 0, projectName: '所有业务线' })\n            //获取所有业务线\n            response.data.forEach((groupitem) => {\n              qadata_groups.push({ groupId: groupitem.groupId, groupName: groupitem.groupName })\n\n              //获取所有项目\n              groupitem.projectList.forEach((projectitem) => {\n                qadata_projects.push({ projectId: projectitem.projectId, projectName: projectitem.projectName })\n              })\n            })\n            this.qadata_groups = qadata_groups\n            this.qadata_projects = qadata_projects\n            this.allproject = qadata_projects\n          }\n        })\n        .catch((error) => {\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    //点击查询获取列表数据\n    getneedtimelist(dateRange) {\n      dateRange[0] = this.dayjs(dateRange[0].valueOf()).format('YYYY-MM-DD')\n      dateRange[1] = this.dayjs(dateRange[1].valueOf()).format('YYYY-MM-DD')\n      axios\n        .post('/DailyWork/query', {\n          startTime: dateRange[0],\n          endTime: dateRange[1],\n          projectId: this.setprojectId,\n          groupId: this.setgroupId,\n        })\n        .then((response) => {\n          if (response.code === 200) {\n            this.qadata = this.sortdata(response.data)\n          }\n        })\n        .catch((error) => {\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    //格式化数据\n    sortdata(data) {\n      var temp = new Array()\n      temp = this.all_columns_data.slice(2)\n      data.forEach((item) => {\n        for (let i = 0; i < temp.length; i++) {\n          item[temp[i].children[0].title] = item.dateWork[i]\n        }\n      })\n      data = this.countdayhours(data)\n      return data\n    },\n\n    //计算某人某日总时长和是否显示分割线\n    countdayhours(data) {\n      var temp = new Array()\n      temp = this.all_columns_data.slice(2)\n      data.forEach((item) => {\n        for (var i = 0; i < temp.length; i++) {\n          //每天总是长\n          var count = 0\n\n          //tb任务 work任务中间的分割线\n          var line_show = true\n\n          //workContents处理\n          if (\n            item[temp[i].children[0].title].workContents &&\n            item[temp[i].children[0].title].workContents.length !== 0\n          ) {\n            item[temp[i].children[0].title].workContents.forEach((item) => {\n              if (item.hour !== null) {\n                count = count + item.hour\n              }\n              //请假或假期隐藏分割线\n              if (item.work_type === 2 || item.work_type === 0) {\n                line_show = false\n              }\n            })\n          }\n\n          //tbWorkContent处理\n          if (\n            item[temp[i].children[0].title].tbWorkContent &&\n            item[temp[i].children[0].title].tbWorkContent.length !== 0\n          ) {\n            item[temp[i].children[0].title].tbWorkContent.forEach((item) => {\n              if (item.hour !== null) {\n                count = count + item.hour\n              }\n            })\n          }\n\n          if (\n            item[temp[i].children[0].title].workContents &&\n            item[temp[i].children[0].title].workContents.length === 0 &&\n            item[temp[i].children[0].title].tbWorkContent &&\n            item[temp[i].children[0].title].tbWorkContent.length === 0\n          ) {\n            line_show = false\n          }\n\n          item[temp[i].children[0].title].count = count\n          item[temp[i].children[0].title].line_show = line_show\n        }\n      })\n      return data\n    },\n\n    //点击跳转\n    jumpto(hrefhost) {\n      if (hrefhost !== null && hrefhost !== '') {\n        window.open(hrefhost)\n      }\n    },\n\n    //打开弹窗\n    showModal(datatime, text, userid) {\n      this.contenttask = text\n      this.edittaskdate = datatime\n      this.edituserid = userid\n      document.documentElement.style = ''\n      if (this.contenttask.length === 0) {\n        this.contenttask = [\n          {\n            content: '',\n            hour: 0,\n            url: null,\n            work_type: 1,\n          },\n        ]\n      }\n      this.visible = true\n    },\n\n    //删除数组元素\n    deltask(num) {\n      this.contenttask.splice(num, 1)\n    },\n\n    //新增任务\n    addtask() {\n      this.contenttask.push({\n        content: '',\n        hour: null,\n        url: null,\n        work_type: 1,\n      })\n    },\n\n    //点击弹窗保存\n    handleOk() {\n      var temp = 1\n      for (var i = 0; i < this.contenttask.length; i++) {\n        if (this.contenttask[i].content === '' || this.contenttask[i].hour === null) {\n          this.$message.error('内容和工时不能为空')\n          temp = 0\n          break\n        }\n      }\n      if (temp === 1) {\n        this.contenttask.forEach((item) => {\n          item.work_type = 1\n        })\n        axios\n          .post('/DailyWork/update', {\n            userId: this.edituserid,\n            date: this.edittaskdate,\n            workContent: this.contenttask,\n          })\n          .then((response) => {\n            if (response.code === 200) {\n              this.$message.success('提交成功')\n              this.visible = false\n              this.getdate(this.dateRange)\n            } else {\n              this.$message.error('提交失败')\n            }\n          })\n          .catch((error) => {\n            this.isLoading = false\n            this.$message.error('内网数据获取失败')\n          })\n      }\n    },\n\n    qingjia() {\n      var temp_content = {\n        content: '请假',\n        hour: 0,\n        url: null,\n        work_type: 2,\n      }\n      axios\n        .post('/DailyWork/update', { userId: this.edituserid, date: this.edittaskdate, workContent: [temp_content] })\n        .then((response) => {\n          if (response.code === 200) {\n            this.$message.success('提交成功')\n            this.visible = false\n            this.getdate(this.dateRange)\n          } else {\n            this.$message.error('提交失败')\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n      this.visible = false\n    },\n\n    //关闭弹窗\n    onClose() {\n      document.documentElement.style.overflowY = 'overlay'\n    },\n\n    //获取表头\n    get_columns(dateRange) {\n      // var start = this.dayjs(dateRange[0].valueOf()).format('YYYY-MM-DD HH:mm:ss')\n      // var stop = this.dayjs(dateRange[1].valueOf()).format('YYYY-MM-DD HH:mm:ss')\n      var start = dateRange[0]\n      var stop = dateRange[1]\n      var array = new Array()\n\n      //添加业务线\n      array.push({ title: '业务线', key: 'projectName', dataIndex: 'projectName', width: 30 })\n\n      //添加姓名\n      array.push({ title: '姓名', key: 'name', dataIndex: 'name', width: 30 })\n      var current = new Date(start)\n      stop = new Date(stop)\n      while (current <= stop) {\n        if (\n          this.get_week(this.dayjs(new Date(current)).day()) === '星期六' ||\n          this.get_week(this.dayjs(new Date(current)).day()) === '星期日'\n        ) {\n          array.push({\n            title: this.get_week(this.dayjs(new Date(current)).day()),\n            children: [\n              {\n                title: this.dayjs(new Date(current)).format('YYYY-MM-DD'),\n                key: this.dayjs(new Date(current)).format('YYYY-MM-DD'),\n                dataIndex: this.dayjs(new Date(current)).format('YYYY-MM-DD'),\n                width: 35,\n                scopedSlots: { customRender: 'action' },\n              },\n            ],\n          })\n        } else {\n          array.push({\n            title: this.get_week(this.dayjs(new Date(current)).day()),\n            children: [\n              {\n                title: this.dayjs(new Date(current)).format('YYYY-MM-DD'),\n                key: this.dayjs(new Date(current)).format('YYYY-MM-DD'),\n                dataIndex: this.dayjs(new Date(current)).format('YYYY-MM-DD'),\n                width: 50,\n                scopedSlots: { customRender: 'action' },\n              },\n            ],\n          })\n        }\n\n        current.setDate(current.getDate() + 1)\n      }\n      this.columns_len = array.length * 120\n      this.all_columns_data = array\n    },\n\n    //获取日期的星期几\n    get_week(num) {\n      var weeks = new Array('星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六')\n      var week = weeks[num]\n      return week\n    },\n  },\n  computed: {},\n  created() {\n    this.init()\n  },\n}\n</script>\n\n\n<style scoped>\n\n\n.a-range-picker {\n  margin-left: 20px;\n  margin-right: 20px;\n}\n.ant-table td {\n  white-space: nowrap;\n}\n\n.editstyle {\n  width: 200px;\n  margin-bottom: 2px;\n}\n\n\n\n</style>"]}]}