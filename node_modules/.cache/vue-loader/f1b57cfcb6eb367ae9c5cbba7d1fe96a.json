{"remainingRequest":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamember.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamember.vue","mtime":1635333893921},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1626939577610},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1626939590555}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGF4aW9zIH0gZnJvbSAnQC91dGlscy9yZXF1ZXN0JwppbXBvcnQgeyBtZXRob2QgfSBmcm9tICdsb2Rhc2gnCgpjb25zdCBjb2x1bW5zID0gWwogIHsgdGl0bGU6ICdpZCcsIHdpZHRoOiAzMCwgZGF0YUluZGV4OiAnaWQnLCBrZXk6ICdpZCcgfSwKICB7IHRpdGxlOiAn5aeT5ZCNJywgd2lkdGg6IDMwLCBkYXRhSW5kZXg6ICduYW1lJywga2V5OiAnbmFtZScgfSwKICB7IHRpdGxlOiAn5p2D6YeNJywgd2lkdGg6IDMwLCBkYXRhSW5kZXg6ICdvcmRlcklkJywga2V5OiAnb3JkZXJJZCcgfSwKICB7IHRpdGxlOiAn5YiX6KGo5pi+56S6Jywgd2lkdGg6IDMwLCBkYXRhSW5kZXg6ICdpc3Nob3cnLCBrZXk6ICdpc3Nob3cnIH0sCiAgewogICAgdGl0bGU6ICfmk43kvZwnLAogICAga2V5OiAndGFza0RldGFpbCcsCiAgICB3aWR0aDogMjUwLAogICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAnYWN0aW9uJyB9LAogIH0sCl0KCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbHVtbnMsCiAgICAgIHFhZGF0YTpbXSwKICAgICAgdmlzaWJsZTogZmFsc2UsCiAgICAgIG1vZGVsaWQ6IiIsCiAgICAgIG1vZGVsb3JkZXI6IiIsCiAgICAgIG1vZGVsbmFtZToiIiwKICAgICAgbW9kZWxpc3Nob3c6dHJ1ZQogICAgfQogIH0sCiAgCiAgbWV0aG9kcyA6IHsKICAgIGluaXQoKXsKICAgICAgICB0aGlzLmdldG1lbWJlcmRhdGEoKQogICAgfSwKICAgIGdldG1lbWJlcmRhdGEoKXsKICAgICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWUKICAgICAgICBheGlvcwogICAgICAgIC5wb3N0KCcvcXVlcnlFbXBsb3llZScsIHsKICAgICAgICAgIERlcGFydG1lbnQ6ICdxYScsCiAgICAgICAgfSkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICByZXNwb25zZS5kYXRhLmZvckVhY2goaXRlbT0+ewogICAgICAgICAgICAgICAgaWYgKGl0ZW0uaXNzaG93PT09MSl7CiAgICAgICAgICAgICAgICBpdGVtLmlzc2hvdyA9ICLmmK8ifQogICAgICAgICAgICAgICAgZWxzZXsKICAgICAgICAgICAgICAgICAgICBpdGVtLmlzc2hvdyA9ICLlkKYiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLnFhZGF0YSA9IHJlc3BvbnNlLmRhdGEKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2UKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WGhee9keaVsOaNruiOt+WPluWksei0pScpCiAgICAgICAgfSkKICAgIH0sCgogICAgc2hvd01vZGFsKGlkLG5hbWUsaXNzaG93LG9yZGVyKSB7CiAgICAgICAgdGhpcy5tb2RlbGlkID0gaWQKICAgICAgICB0aGlzLm1vZGVsbmFtZSA9IG5hbWUKICAgICAgICB0aGlzLm1vZGVsb3JkZXI9b3JkZXIKICAgICAgICBjb25zb2xlLmxvZyhvcmRlcikKICAgICAgICBpZihpc3Nob3cgPT09ICLmmK8iKXsKICAgICAgICAgICAgdGhpcy5tb2RlbGlzc2hvdz10cnVlCiAgICAgICAgfQogICAgICAgIGVsc2V7CiAgICAgICAgICAgIHRoaXMubW9kZWxpc3Nob3c9ZmFsc2UKICAgICAgICB9CiAgICAgICAgdGhpcy52aXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBoYW5kbGVPaygpIHsKICAgICAgICBheGlvcwogICAgICAgIC5wb3N0KCcvcWFvcmRlcicsIHsKICAgICAgICAgIGlkIDogdGhpcy5tb2RlbGlkLAogICAgICAgICAgb3JkZXJJZCA6IHRoaXMubW9kZWxvcmRlciwKICAgICAgICAgIGlzc2hvdyA6IHRoaXMubW9kZWxpc3Nob3cKICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5o+Q5Lqk5oiQ5YqfJykKICAgICAgICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuaW5pdCgpCiAgICAgICAgICB9CiAgICAgICAgICBlbHNlewogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+aPkOS6pOWksei0pScpCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCflhoXnvZHmlbDmja7ojrflj5blpLHotKUnKQogICAgICAgIH0pCiAgICB9LAogICAgb25DaGFuZ2UoY2hlY2tlZCkgewogICAgICAgIG1vZGVsaXNzaG93ID0gY2hlY2tlZAogICAgICAgIGNvbnNvbGUubG9nKGBhLXN3aXRjaCB0byAke2NoZWNrZWR9YCk7CiAgICB9LAogICAgCgogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmluaXQoKQogIH0sCn0K"},{"version":3,"sources":["qamember.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"qamember.vue","sourceRoot":"src/views/qadata","sourcesContent":["<template>\n    <div>\n        <h1>qa人员配置</h1>\n        <a-table\n      :columns=\"columns\"\n      :data-source=\"qadata\"\n      style=\"margin-top: 20px;\"\n      :loading=\"isLoading\"\n      :pagination=\"{ defaultPageSize: 100 }\"\n    >\n      <div slot=\"action\" slot-scope=\"text, record\">\n        <div>\n            <a-button type=\"primary\" @click=\"showModal(record.id,record.name,record.isshow,record.orderId)\">编辑</a-button>\n        </div>\n      </div>\n    </a-table>\n    <a-modal v-model=\"visible\" title=\"编辑\" @ok=\"handleOk\" >\n                <p>姓名: {{modelname}}</p>\n                <p>权重: <a-input-number\n                        placeholder=\"权重\" \n                        style=\"width:80px;\" \n                        v-model=modelorder\n                        /> </p>\n                <p>显示: <a-switch v-model=modelisshow @change=\"onChange\"  /></p>\n    </a-modal>\n    </div>\n</template>\n\n<script>\nimport { axios } from '@/utils/request'\nimport { method } from 'lodash'\n\nconst columns = [\n  { title: 'id', width: 30, dataIndex: 'id', key: 'id' },\n  { title: '姓名', width: 30, dataIndex: 'name', key: 'name' },\n  { title: '权重', width: 30, dataIndex: 'orderId', key: 'orderId' },\n  { title: '列表显示', width: 30, dataIndex: 'isshow', key: 'isshow' },\n  {\n    title: '操作',\n    key: 'taskDetail',\n    width: 250,\n    scopedSlots: { customRender: 'action' },\n  },\n]\n\n\nexport default {\n  data() {\n    return {\n      columns,\n      qadata:[],\n      visible: false,\n      modelid:\"\",\n      modelorder:\"\",\n      modelname:\"\",\n      modelisshow:true\n    }\n  },\n  \n  methods : {\n    init(){\n        this.getmemberdata()\n    },\n    getmemberdata(){\n        this.isLoading = true\n        axios\n        .post('/queryEmployee', {\n          Department: 'qa',\n        })\n        .then((response) => {\n          if (response.code === 200) {\n            this.isLoading = false\n            response.data.forEach(item=>{\n                if (item.isshow===1){\n                item.isshow = \"是\"}\n                else{\n                    item.isshow = \"否\"\n                }\n                })\n            this.qadata = response.data\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    showModal(id,name,isshow,order) {\n        this.modelid = id\n        this.modelname = name\n        this.modelorder=order\n        console.log(order)\n        if(isshow === \"是\"){\n            this.modelisshow=true\n        }\n        else{\n            this.modelisshow=false\n        }\n        this.visible = true;\n    },\n    handleOk() {\n        axios\n        .post('/qaorder', {\n          id : this.modelid,\n          orderId : this.modelorder,\n          isshow : this.modelisshow\n        })\n        .then((response) => {\n          if (response.code === 200) {\n              this.$message.success('提交成功')\n            this.visible = false;\n            this.init()\n          }\n          else{\n              this.$message.error('提交失败')\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n    onChange(checked) {\n        modelisshow = checked\n        console.log(`a-switch to ${checked}`);\n    },\n    \n\n  },\n  computed: {},\n  created() {\n    this.init()\n  },\n}\n</script>\n\n<style scoped>\n\n\n</style>\n"]}]}