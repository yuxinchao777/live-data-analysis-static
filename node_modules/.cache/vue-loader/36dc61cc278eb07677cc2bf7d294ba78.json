{"remainingRequest":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/code/vue/live-data-analysis-static/src/views/qadata/memberconfig.vue?vue&type=style&index=0&id=f673c432&scoped=true&lang=css&","dependencies":[{"path":"/Users/momo/code/vue/live-data-analysis-static/src/views/qadata/memberconfig.vue","mtime":1649325148727},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/css-loader/dist/cjs.js","mtime":1647848753997},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1647848754116},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/postcss-loader/src/index.js","mtime":1647586367416},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1647586199048},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1647848754116}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubW9kZWx3aWR0aHsKICB3aWR0aDogOwp9Cg=="},{"version":3,"sources":["memberconfig.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqYA;AACA;AACA","file":"memberconfig.vue","sourceRoot":"src/views/qadata","sourcesContent":["<template>\n  <div>\n    <!--业务线下拉框-->\n    <a-select default-value=\"商业技术部\" style=\"width: 150px; margin-left: 5px\">\n      <a-select-option\n        v-for=\"group in qadata_groups\"\n        :key=\"group.groupId\"\n        :value=\"group.groupName\"\n        @click=\"setgroupid(group.groupId)\"\n      >\n        {{ group.groupName }}\n      </a-select-option>\n    </a-select>\n\n    <!--项目下拉框-->\n    <a-select default-value=\"商业技术部\" style=\"width: 150px; margin-left: 20px\">\n      <a-select-option\n        v-for=\"project in qadata_projects\"\n        :key=\"project.projectId\"\n        :value=\"project.projectName\"\n        @click=\"setprojectid(project.projectId)\"\n      >\n        {{ project.projectName }}\n      </a-select-option>\n    </a-select>\n\n    <!--技术类型下拉框-->\n    <a-select default-value=\"所有技术类型\" style=\"width: 150px; margin-left: 20px\">\n      <a-select-option v-for=\"techtype in techtypes\" :key=\"techtype\" :value=\"techtype\" @click=\"settechtype(techtype)\">\n        {{ techtype }}\n      </a-select-option>\n    </a-select>\n\n    <!--查询按钮-->\n    <a-button type=\"primary\" icon=\"search\" @click=\"getdate()\" style=\"margin-left: 20px\"> 查询 </a-button>\n\n    <!--添加按钮-->\n    <a-button type=\"primary\" style=\"margin-left: 20px\" @click=\"showModal()\"> 添加成员 </a-button>\n\n    <a-table :columns=\"columns\" :data-source=\"qadata\" style=\"margin-top: 20px\" :pagination=\"{ defaultPageSize: 100 }\">\n      <div slot=\"action\" slot-scope=\"text, record\">\n        <div>\n          <a-button type=\"primary\" @click=\"showModal(record.id, record.name, record.userType, record.orderId)\"\n            >编辑</a-button\n          >\n          <a-button type=\"primary\" style=\"margin-left: 10px\">隐藏</a-button>\n        </div>\n      </div>\n    </a-table>\n\n    <div>\n      <a-modal v-model=\"visible\" title=\"编辑\" @ok=\"handleOk\" :afterClose=\"onClose\">\n        <p>\n          <span class='modelwidth'>成员名称 :</span><span><a-select\n            mode=\"combobox\"\n            allowClear:true\n            showSearch\n            notFoundContent=\"暂无结果\"\n            style=\"width: 300px; margin-left: 10px\"\n            placeholder=\"请输入成员名称\"\n            v-model=\"setname\"\n            @change=\"getmembersearch(setname)\"\n          >\n            <a-select-option\n              :v-model=\"searchnamelist\"\n              v-for=\"searchname in searchnamelist\"\n              :key=\"searchname.name\"\n              :value=\"searchname.name\"\n              @click=\"setsearchname(searchname.name)\"\n            >\n              {{ searchname.name }}\n            </a-select-option>\n          </a-select>\n          </span>\n        </p>\n        <p>\n          <span class=\"modelwidth\"> 技术线 :</span><span>\n          <!--业务线下拉框-->\n          <a-select style=\"width: 300px; margin-left: 10px\">\n            <a-select-option\n              v-for=\"group in modelgrouplist\"\n              :key=\"group.groupId\"\n              :value=\"group.groupName\"\n              @click=\"setmodelgroupid(group.groupId)\"\n            >\n              {{ group.groupName }}\n            </a-select-option>\n          </a-select>\n          </span>\n        </p>\n\n        <p>\n          <span class=\"modelwidth\"> 业务线 :</span><span>\n          <!--项目下拉框-->\n          <a-select style=\"width: 300px; margin-left: 10px\">\n            <a-select-option\n              v-for=\"project in modelprojectlist\"\n              :key=\"project.projectId\"\n              :value=\"project.projectName\"\n              @click=\"setmodelprojectid(project.projectId)\"\n            >\n              {{ project.projectName }}\n            </a-select-option>\n          </a-select>\n          </span>\n        </p>\n        <p>\n          技术类型 :\n          <!--技术类型下拉框-->\n          <a-select style=\"width: 150px; margin-left: 20px\">\n            <a-select-option\n              v-for=\"modeltech in modeltechtype\"\n              :key=\"modeltech\"\n              :value=\"modeltech\"\n              @click=\"setmodeltechtype(modeltech)\"\n            >\n              {{ modeltech }}\n            </a-select-option>\n          </a-select>\n        </p>\n      </a-modal>\n    </div>\n  </div>\n</template>\n<script>\nimport { axios } from '@/utils/request'\nimport { method } from 'lodash'\n\nconst columns = [\n  { title: '姓名', width: 30, dataIndex: 'name', key: 'name' },\n  { title: '技术线', width: 30, dataIndex: 'grouptype', key: 'grouptype' },\n  { title: '业务线', width: 30, dataIndex: 'peojecttype', key: 'peojecttype' },\n  { title: '技术类型', width: 30, dataIndex: 'techtype', key: 'techtype' },\n  { title: '操作人', width: 30, dataIndex: 'person', key: 'person' },\n  { title: '操作时间', width: 30, dataIndex: 'time', key: 'time' },\n  {\n    title: '操作',\n    key: 'taskDetail',\n    width: 250,\n    scopedSlots: { customRender: 'action' },\n  },\n]\n\nconst techtypes = ['所有技术类型', 'H5', 'Lua', 'iOS', 'Android', 'JAVA', 'PHP', 'QA']\n\nimport building from '../building.vue'\n\nexport default {\n  //人员维护页面\n  name: 'member',\n  data() {\n    return {\n      //表头\n      columns,\n\n      //列表数据\n      qadata: [],\n\n      //技术部\n      qadata_groups: [],\n\n      //业务线\n      qadata_projects: [],\n\n      //小组和业务线\n      qadatas: [],\n\n      //项目id\n      setprojectId: 0,\n\n      //设置项目名称\n      setprojectname: '所有业务线',\n\n      //业务线id\n      setgroupId: 0,\n\n      //技术类型\n      techtypes,\n\n      //techtypeid\n      techtypeid: 0,\n\n      //弹窗是否显示\n      visible: false,\n\n      //模糊搜索人员名称\n      setname: '',\n\n      //模糊搜索人员列表\n      searchnamelist: [],\n\n      //弹窗的技术部，不包括全部\n      modelgrouplist: [],\n\n      //弹窗的业务线，不包括全部\n      modelprojectlist: [],\n\n      //弹窗的技术部id\n      modelgroupid: 1,\n\n      //弹窗的业务线id\n      modelprojectid: 1,\n\n      //弹窗中的技术类型\n      modeltechtype: [],\n    }\n  },\n\n  methods: {\n    init() {\n      //获取业务线\n      this.getproject()\n\n      //获取列表数据\n      this.getmemberdata()\n    },\n\n    //设置查询技术部的id\n    setgroupid(groupid) {\n      this.setgroupId = groupid\n\n      //项目增加所有业务线\n      var temp = [{ projectId: 0, projectName: '所有业务线' }]\n      this.qadatas.forEach((item) => {\n        if (groupid === item.groupId) {\n          this.qadata_projects = temp.concat(item.projectList)\n        } else if (groupid === 0) {\n          this.qadata_projects = this.allproject\n        }\n      })\n      //重置业务线名称和id\n      this.setprojectname = '所有业务线'\n      this.setprojectId = 0\n    },\n\n    //设置查询技术部id\n    setprojectid(projectid) {\n      this.setprojectId = projectid\n      this.qadata_projects.forEach((item) => {\n        if (projectid === item.projectId) {\n          this.setprojectname = item.projectName\n        }\n      })\n    },\n\n    //设置技术类型\n    settechtype(techtype) {\n      this.techtypeid = techtype\n    },\n\n    //获取业务线和项目\n    getproject() {\n      axios\n        .get('/project/query')\n        .then((response) => {\n          if (response.code === 200) {\n            this.qadatas = response.data\n\n            var qadata_groups = new Array()\n            var qadata_projects = new Array()\n\n            qadata_groups.push({ groupId: 0, groupName: '商业技术部' })\n\n            qadata_projects.push({ projectId: 0, projectName: '所有业务线' })\n            //获取所有业务线\n            response.data.forEach((groupitem) => {\n              qadata_groups.push({ groupId: groupitem.groupId, groupName: groupitem.groupName })\n\n              //获取所有项目\n              groupitem.projectList.forEach((projectitem) => {\n                qadata_projects.push({ projectId: projectitem.projectId, projectName: projectitem.projectName })\n              })\n            })\n            this.qadata_groups = qadata_groups\n            this.qadata_projects = qadata_projects\n            this.allproject = qadata_projects\n          }\n        })\n        .catch((error) => {\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    getmemberdata() {\n      this.isLoading = true\n      let params = new FormData()\n      params.append('Department', 'qa')\n      axios\n        .post('/queryEmployee', params, { headers: { 'Content-Type': 'multipart/form-data' } })\n        .then((response) => {\n          if (response.code === 200) {\n            response.data.forEach((item) => {\n              if (item.userType === 1) {\n                item.userType = '是'\n              } else {\n                item.userType = '否'\n              }\n            })\n            this.qadata = response.data\n          }\n        })\n        .catch((error) => {\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    //模糊搜索人员\n    getmembersearch(name) {\n      axios\n        .post('emplyoee/search', { name: name })\n        .then((response) => {\n          if (response.code === 200) {\n            this.searchnamelist = response.data\n            console.log(this.setname)\n          }\n        })\n        .catch((error) => {\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    //设置搜索人员名称\n    setsearchname(name) {\n      this.setname = name\n    },\n\n    //设置弹窗中的技术部列表和业务线列表\n    setmodellist() {\n      this.modelgrouplist = this.qadata_groups.slice(1)\n      this.modelprojectlist = this.qadata_projects.slice(1)\n      this.modeltechtype = this.techtypes.slice(1)\n    },\n\n    showModal() {\n      //设置弹窗的技术部列表和业务线列表\n      this.setmodellist()\n\n      document.documentElement.style = ''\n      this.visible = true\n    },\n    handleOk() {\n      let params = new FormData()\n      params.append('id', this.modelid)\n      params.append('orderId', this.modelorder)\n      params.append('userType', Number(this.modeluserType))\n      axios\n        .post('/editEmployee', params, { headers: { 'Content-Type': 'multipart/form-data' } })\n        .then((response) => {\n          if (response.code === 200) {\n            this.$message.success('提交成功')\n            this.visible = false\n            this.init()\n          } else {\n            this.$message.error('提交失败')\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n    onClose() {\n      document.documentElement.style.overflowY = 'overlay'\n    },\n\n    //设置弹窗技术部id\n    setmodelgroupid(id){\n      this.modelgroupid = id\n    },\n\n    //设置弹窗业务线id\n    setmodelprojectid(id){\n      this.modelprojectid = id\n    },\n\n    //设置弹窗技术类型\n    setmodeltechtype(id){\n      this.modeltechtype = id\n    }\n  },\n  computed: {},\n\n  created() {\n    this.init()\n  },\n}\n</script>\n\n<style scoped>\n.modelwidth{\n  width: ;\n}\n</style>\n"]}]}