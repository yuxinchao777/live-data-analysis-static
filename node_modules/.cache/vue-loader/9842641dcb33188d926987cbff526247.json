{"remainingRequest":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamemberdata.vue?vue&type=style&index=0&id=021df242&scoped=true&lang=css&","dependencies":[{"path":"/Users/momo/vue/live-data-analysis-static/src/views/qadata/qamemberdata.vue","mtime":1641895045758},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/css-loader/dist/cjs.js","mtime":1640003225316},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640003225539},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/postcss-loader/src/index.js","mtime":1626939590514},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1626939577620},{"path":"/Users/momo/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1640003225539}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYS1yYW5nZS1waWNrZXIgewogIG1hcmdpbi1sZWZ0OiAyMHB4OwogIG1hcmdpbi1yaWdodDogMjBweDsKfQouYW50LXRhYmxlIHRkIHsgCiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgCiAgCn0KCi5lZGl0c3R5bGV7CiAgd2lkdGg6MjAwcHg7CiAgbWFyZ2luLWJvdHRvbToycHg7Cn0KCgoK"},{"version":3,"sources":["qamemberdata.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+XA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"qamemberdata.vue","sourceRoot":"src/views/qadata","sourcesContent":["<template>\n  <div class=\"qamember-wrapper\">\n    <div>\n      <!--部门下拉框-->\n      部门<a-select default-value=\"商业QA\" style=\"width: 100px; margin-left: 5px\">\n        <a-select-option\n          v-for=\"apartment in qadata_apartment.data.apartments\"\n          :key=\"apartment.id\"\n          :value=\"apartment.name\"\n          @click=\"setapartmentid(apartment.id)\"\n        >\n          {{ apartment.name }}\n        </a-select-option>\n      </a-select>\n      <!--时间选择框-->\n      <a-range-picker class=\"a-range-picker\" style=\"width: 400px\" show-time v-model=\"dateRange\">\n        <template slot=\"renderExtraFooter\"> 日期选择</template>\n      </a-range-picker>\n      <!--查询按钮-->\n      <a-button type=\"primary\" icon=\"search\" @click=\"getdate(dateRange)\"> 查询 </a-button>\n    </div>\n    <h6>（备注：蓝色：=8h，红色：>8h，绿色：<8h，橘色：请假，粉色：假期）</h6>\n    <a-table\n    :columns=\"all_columns_data\"\n    :data-source=\"qadata\"\n    style=\"margin-top: 20px;\"\n    bordered\n    \n    :pagination=\"{ defaultPageSize: 100 }\"\n    \n  >\n    <div slot=\"action\" slot-scope=\"text,record\">\n      \n        <!--tb内容-->\n        <div v-if=\"text.tbWorkContent && text.tbWorkContent.length\">\n          <a v-for=\"(detail, index) in text.tbWorkContent\" :key=\"index\" @click=\"jumpto(detail && detail.url)\">\n            <span class=\"record-text\" style=\"margin-top: 20px; margin-bottom: 20px\">\n                <span v-if='text.count===8' style=\"color: rgb(0, 209, 178)\">[{{ detail.hour }}H]</span>\n                <span v-if='text.count>8' style=\"color: rgb(205, 51, 51)\">[{{ detail.hour }}H]</span>\n                <span v-if='text.count<8' style=\"color: rgb(34, 139, 34)\">[{{ detail.hour }}H]</span>\n                \n                <span v-if='detail.work_type===1&&text.count===8'>{{ detail.content }}</span>\n                <span v-else-if='detail.work_type===1&&text.count>8' style=\"color: rgb(205, 51, 51)\">{{ detail.content }}</span>\n                <span v-else-if='detail.work_type===1&&text.count<8' style=\"color: rgb(34, 139, 34)\">{{ detail.content }}</span>\n\n                <span v-else-if='detail.work_type===0' style=\"color: rgb(205, 149, 12)\">{{ detail.content }}</span>\n                <span v-else style=\"color: rgb(238, 99, 99)\">{{ detail.content }}</span>\n            </span>\n          </a>\n        </div>\n\n        <!-- 分割线 -->\n        <hr />\n\n        <!--自定义内容-->\n        <div>\n          <div v-if=\"text.workContents && text.workContents.length\">\n            <a v-for=\"(detail, index) in text.workContents\" :key=\"index\" @click=\"jumpto(detail && detail.url)\">\n              <span class=\"record-text\" style=\"margin-top: 20px; margin-bottom: 20px\">\n                <span v-if='detail.work_type===1&&text.count===8' style=\"color: rgb(0, 209, 178)\">[{{ detail.hour }}H]</span>\n                <span v-else-if='detail.work_type===1&&text.count>8' style=\"color: rgb(205, 51, 51)\">[{{ detail.hour }}H]</span>\n                <span v-else-if='detail.work_type===1&&text.count<8' style=\"color: rgb(34, 139, 34)\">[{{ detail.hour }}H]</span>\n                \n                <span v-if='detail.work_type===1&&text.count===8'>{{ detail.content }}</span>\n                <span v-else-if='detail.work_type===1&&text.count>8' style=\"color: rgb(205, 51, 51)\">{{ detail.content }}</span>\n                <span v-else-if='detail.work_type===1&&text.count<8' style=\"color: rgb(34, 139, 34)\">{{ detail.content }}</span>\n\n                <span v-else-if='detail.work_type===0' style=\"color: rgb(255, 20, 147)\">{{ detail.content }}</span>\n\n                <span v-else style=\"color: rgb(255, 127, 0)\">{{ detail.content }}</span>\n              </span>\n            </a>\n          </div>\n          <div>\n            <div style=\"margin-top:10px;\">\n              <a-button id='editbutton' size=\"small\" @click=\"showModal( text.date,text.workContents,record.id )\">编辑</a-button>\n            </div>\n          </div>\n        </div>\n      \n      \n    </div>\n\n  </a-table>\n\n  <!-- 弹窗 -->\n  <div>\n    <a-modal v-model=\"visible\" title=\"编辑\" @ok=\"handleOk\"  :afterClose=\"onClose\" width=\"800px\">\n      <div v-for=\"(item,index) in contenttask\" :key=\"index\" style=\"margin-top:5px\">\n        <span width=\"100px\">工作内容: <a-input class=\"editstyle\" v-model=\"item.content\"/></span>\n        <span>链接地址: <a-input class=\"editstyle\" v-model=\"item.url\"/></span>\n        <span>工时: <a-input class=\"editstyle\" v-model=\"item.hour\" style=\"  width:50px;\" /></span>\n        <span><a-button type=\"danger\" @click=\"deltask(index)\" style=\"margin-left:5px;\">删除</a-button></span>\n      </div>\n      <div>\n        <span><a-button type=\"primary\" @click=\"addtask()\">新增</a-button></span>\n        <span><a-button style=\"margin-left:50px;margin-top:10px\" type=\"primary\" @click=\"qingjia()\">请假</a-button></span>\n      </div>     \n    </a-modal>\n  </div>\n\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport 'moment/locale/zh-cn'\nimport { axios } from '@/utils/request'\n\nconst qadata_apartment = {\n  statuscode: 200,\n  data: {\n    apartments: [{ id: 1, name: '商业QA' }],\n  },\n}\n\n\nexport default {\n  name: 'qamemberdata',\n  data(){\n    return{\n      //部门\n      qadata_apartment,\n\n      //时间选择框\n      dateRange: [],\n\n      //表头\n      all_columns_data:[],\n\n      //列表数据\n      qadata:[],\n\n      //弹窗是否显示\n      visible: false,\n\n      //弹窗中的任务\n      contenttask:[],\n\n      //弹窗任务日期\n      edittaskdate:\"\",\n\n      //弹窗人的id\n      edituserid:\"\",\n    }\n  },\n\n  methods:{\n    init(){\n       //周一 周日\n      const monday = this.dayjs().startOf('week').add(1, 'day')\n      const sunday = this.dayjs().endOf('week').add(1, 'day')\n\n      //时间转moment对象\n      this.dateRange = [\n        moment(monday.format('dddd MMM DD YYYY HH:mm:ss ZZ')),\n        moment(sunday.format('dddd MMM DD YYYY HH:mm:ss ZZ')),\n      ]\n      //let temptime = [monday.format('YYYY-MM-DD HH:mm:ss'), sunday.format('YYYY-MM-DD HH:mm:ss')]\n\n      this.getdate(this.dateRange)\n     \n    },\n    //获取列表数据\n    getdate(dateRange){\n      let temptime = [this.dayjs(dateRange[0].valueOf()).format('YYYY-MM-DD HH:mm:ss'),\n                      this.dayjs(dateRange[1].valueOf()).format('YYYY-MM-DD HH:mm:ss')]\n      this.get_columns(temptime)\n      this.getneedtimelist(temptime)\n    },\n\n    setapartmentid(apartmentid) {\n      this.apartmentid = apartmentid\n    },\n\n    //点击查询获取列表数据\n    getneedtimelist(dateRange){\n      dateRange[0] = this.dayjs(dateRange[0].valueOf()).format('YYYY-MM-DD')\n      dateRange[1] = this.dayjs(dateRange[1].valueOf()).format('YYYY-MM-DD')\n      axios\n        .post('/DailyWork/query',  {\"startTime\":dateRange[0],\"endTime\":dateRange[1]} \n        )\n        .then((response) => {\n          if (response.code === 200) {\n            this.qadata =this.sortdata(response.data)\n            console.log(this.qadata)\n          }\n        })\n        .catch((error) => {\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    //格式化数据\n    sortdata(data){\n      var temp = new Array()\n      temp = this.all_columns_data.slice(2)\n      data.forEach(item=>{\n        for (let i=0;i<temp.length;i++){\n         item[temp[i].children[0].title] = item.dateWork[i]\n        }\n      })\n      data = this.countdayhours(data)\n      return data\n    },\n\n    //计算某人某日总时长\n    countdayhours(data){\n      var temp = new Array()\n      temp = this.all_columns_data.slice(2)\n      data.forEach(item=>{\n        for (var i=0;i<temp.length;i++){\n          var count = 0\n          if(item[temp[i].children[0].title].workContents){\n          item[temp[i].children[0].title].workContents.forEach(item=>{\n             if(item.hour!==null){count=count+item.hour}\n            })}\n          if(item[temp[i].children[0].title].tbWorkContent){\n          item[temp[i].children[0].title].tbWorkContent.forEach(item=>{\n             if(item.hour!==null){count=count+item.hour}\n            })}\n          item[temp[i].children[0].title].count = count\n        }\n        })\n      return data\n     },\n\n    //点击跳转\n    jumpto(hrefhost) {\n      window.open(hrefhost)\n    },\n\n    //打开弹窗\n    showModal(datatime,text,userid) {\n      this.contenttask = text\n      this.edittaskdate = datatime\n      this.edituserid = userid\n      document.documentElement.style = \"\";\n      this.visible = true;\n    },\n\n    //删除数组元素\n    deltask(num){\n      this.contenttask.splice(num,1)\n    },\n\n    //新增任务\n    addtask(){\n      this.contenttask.push(\n        {\n          \"content\": \"\",\n          \"hour\": null,\n          \"url\": null,\n          \"work_type\": 1\t\n        }\n      )\n    },\n\n    //点击弹窗保存\n    handleOk() {\n      var temp = 1\n      for(var i=0;i<this.contenttask.length;i++){\n        if(this.contenttask[i].content==='' || this.contenttask[i].hour===null){\n          this.$message.error(\"内容和工时不能为空\")\n          temp =0\n          break\n        }\n      }\n      if(temp===1){\n          axios\n          .post('/DailyWork/update', {\"userId\":this.edituserid,\n                                      \"date\":this.edittaskdate,\n                                      \"workContent\":this.contenttask})\n          .then((response) => {\n            if (response.code === 200) {\n                this.$message.success('提交成功')\n              this.visible = false;\n              this.init()\n            }\n            else{\n                this.$message.error('提交失败')\n            }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n      }\n    },\n\n    qingjia(){\n      var temp_content =   {\n          \"content\": \"请假\",\n          \"hour\": 0,\n          \"url\": null,\n          \"work_type\": 0\t\n        }\n          axios\n          .post('/DailyWork/update', {\"userId\":this.edituserid,\n                                      \"date\":this.edittaskdate,\n                                      \"workContent\":[temp_content]})\n          .then((response) => {\n            if (response.code === 200) {\n                this.$message.success('提交成功')\n              this.visible = false;\n              this.init()\n            }\n            else{\n                this.$message.error('提交失败')\n            }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n        this.visible = false\n    },\n\n    //关闭弹窗\n    onClose() {\n      document.documentElement.style.overflowY = \"overlay\";\n    },\n\n    //获取表头\n    get_columns(dateRange){\n      // var start = this.dayjs(dateRange[0].valueOf()).format('YYYY-MM-DD HH:mm:ss')\n      // var stop = this.dayjs(dateRange[1].valueOf()).format('YYYY-MM-DD HH:mm:ss')\n      var start = dateRange[0]\n      var stop = dateRange[1]\n      var array = new Array()\n\n      //添加业务线\n      array.push({'title': '业务线',\n                  'key' :'projectName',\n                  'dataIndex': 'projectName',\n                  'width':50,\n      })\n\n      //添加姓名\n      array.push({'title': '姓名',\n                  'key' :'name',\n                  'dataIndex': 'name',\n                  'width':50,\n      })\n      var current = new Date(start)\n      stop  = new Date(stop);\n      while (current <= stop) {\n          array.push( {'title':this.get_week( this.dayjs(new Date (current)).day() ),\n                      'children':[{'title':this.dayjs(new Date (current)).format('YYYY-MM-DD'),\n                                  'key':this.dayjs(new Date (current)).format('YYYY-MM-DD'),\n                                  'dataIndex':this.dayjs(new Date (current)).format('YYYY-MM-DD'),\n                                  'width':50,\n                                  scopedSlots: { customRender: 'action' },\n                                  }]\n                      })\n\n              current.setDate(current.getDate() + 1)\n      }\n      this.all_columns_data = array\n    },\n\n    //获取日期的星期几\n    get_week(num){\n      var weeks = new Array(\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\")\n      var week = weeks[num]\n      return week\n    },\n\n  },\n  computed:{\n    \n  },\n  created() {\n    this.init()\n  },\n  \n}\n\n\n</script>\n\n\n<style scoped>\n.a-range-picker {\n  margin-left: 20px;\n  margin-right: 20px;\n}\n.ant-table td { \n  white-space: nowrap; \n  \n}\n\n.editstyle{\n  width:200px;\n  margin-bottom:2px;\n}\n\n\n\n</style>"]}]}