{"remainingRequest":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/momo/code/vue/live-data-analysis-static/src/views/qadata/qamember.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/momo/code/vue/live-data-analysis-static/src/views/qadata/qamember.vue","mtime":1647945714510},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1647586199048},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/babel-loader/lib/index.js","mtime":1647848746451},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/cache-loader/dist/cjs.js","mtime":1647586199048},{"path":"/Users/momo/code/vue/live-data-analysis-static/node_modules/vue-loader/lib/index.js","mtime":1647848754116}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGF4aW9zIH0gZnJvbSAnQC91dGlscy9yZXF1ZXN0JwppbXBvcnQgeyBtZXRob2QgfSBmcm9tICdsb2Rhc2gnCgpjb25zdCBjb2x1bW5zID0gWwogIHsgdGl0bGU6ICdpZCcsIHdpZHRoOiAzMCwgZGF0YUluZGV4OiAnaWQnLCBrZXk6ICdpZCcgfSwKICB7IHRpdGxlOiAn5aeT5ZCNJywgd2lkdGg6IDMwLCBkYXRhSW5kZXg6ICduYW1lJywga2V5OiAnbmFtZScgfSwKICB7IHRpdGxlOiAn5p2D6YeNJywgd2lkdGg6IDMwLCBkYXRhSW5kZXg6ICdvcmRlcklkJywga2V5OiAnb3JkZXJJZCcgfSwKICB7IHRpdGxlOiAn5YiX6KGo5pi+56S6Jywgd2lkdGg6IDMwLCBkYXRhSW5kZXg6ICd1c2VyVHlwZScsIGtleTogJ3VzZXJUeXBlJyB9LAogIHsKICAgIHRpdGxlOiAn5pON5L2cJywKICAgIGtleTogJ3Rhc2tEZXRhaWwnLAogICAgd2lkdGg6IDI1MCwKICAgIHNjb3BlZFNsb3RzOiB7IGN1c3RvbVJlbmRlcjogJ2FjdGlvbicgfSwKICB9LApdCgppbXBvcnQgYnVpbGRpbmcgZnJvbSAnLi4vYnVpbGRpbmcudnVlJwoKZXhwb3J0IGRlZmF1bHQgewogIC8v5Lq65ZGY57u05oqk6aG16Z2iCiAgbmFtZTogJ21lbWJlcicsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbHVtbnMsCiAgICAgIHFhZGF0YTogW10sCiAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICBtb2RlbGlkOiAnJywKICAgICAgbW9kZWxvcmRlcjogJycsCiAgICAgIG1vZGVsbmFtZTogJycsCiAgICAgIG1vZGVsdXNlclR5cGU6IHRydWUsCiAgICAgIHRhYmtleToicWEiCiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgaW5pdCgpIHsKICAgICAgdGhpcy5nZXRtZW1iZXJkYXRhKCkKICAgIH0sCiAgICBnZXRtZW1iZXJkYXRhKCkgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWUKICAgICAgbGV0IHBhcmFtcyA9IG5ldyBGb3JtRGF0YSgpCiAgICAgIHBhcmFtcy5hcHBlbmQoJ0RlcGFydG1lbnQnLCAncWEnKQogICAgICBheGlvcwogICAgICAgIC5wb3N0KCcvcXVlcnlFbXBsb3llZScsIHBhcmFtcywgeyBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScgfSB9KQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlCiAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgICAgICAgIGlmIChpdGVtLnVzZXJUeXBlID09PSAnMScpIHsKICAgICAgICAgICAgICAgIGl0ZW0udXNlclR5cGUgPSAn5pivJwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpdGVtLnVzZXJUeXBlID0gJ+WQpicKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMucWFkYXRhID0gcmVzcG9uc2UuZGF0YQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5YaF572R5pWw5o2u6I635Y+W5aSx6LSlJykKICAgICAgICB9KQogICAgfSwKCiAgICBzaG93TW9kYWwoaWQsIG5hbWUsIHVzZXJUeXBlLCBvcmRlcikgewogICAgICB0aGlzLm1vZGVsaWQgPSBpZAogICAgICB0aGlzLm1vZGVsbmFtZSA9IG5hbWUKICAgICAgdGhpcy5tb2RlbG9yZGVyID0gb3JkZXIKICAgICAgaWYgKHVzZXJUeXBlID09PSAn5pivJykgewogICAgICAgIHRoaXMubW9kZWx1c2VyVHlwZSA9IDEKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLm1vZGVsdXNlclR5cGUgPSAwCiAgICAgIH0KCiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZSA9ICcnCiAgICAgIHRoaXMudmlzaWJsZSA9IHRydWUKICAgIH0sCiAgICBoYW5kbGVPaygpIHsKICAgICAgbGV0IHBhcmFtcyA9IG5ldyBGb3JtRGF0YSgpCiAgICAgIHBhcmFtcy5hcHBlbmQoJ2lkJywgdGhpcy5tb2RlbGlkKQogICAgICBwYXJhbXMuYXBwZW5kKCdvcmRlcklkJywgdGhpcy5tb2RlbG9yZGVyKQogICAgICBwYXJhbXMuYXBwZW5kKCd1c2VyVHlwZScsIE51bWJlcih0aGlzLm1vZGVsdXNlclR5cGUpKQogICAgICBheGlvcwogICAgICAgIC5wb3N0KCcvZWRpdEVtcGxveWVlJywgcGFyYW1zLCB7IGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJyB9IH0pCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICBpZiAocmVzcG9uc2UuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5o+Q5Lqk5oiQ5YqfJykKICAgICAgICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgdGhpcy5pbml0KCkKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+aPkOS6pOWksei0pScpCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCflhoXnvZHmlbDmja7ojrflj5blpLHotKUnKQogICAgICAgIH0pCiAgICB9LAogICAgb25DbG9zZSgpIHsKICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLm92ZXJmbG93WSA9ICdvdmVybGF5JwogICAgfSwKICAgIG9uQ2hhbmdlKGNoZWNrZWQpIHsKICAgICAgbW9kZWx1c2VyVHlwZSA9IGNoZWNrZWQKICAgIH0sCiAgfSwKICBjb21wdXRlZDoge30sCgogIGNvbXBvbmVudHM6e2J1aWxkaW5nfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5pbml0KCkKICB9LAp9Cg=="},{"version":3,"sources":["qamember.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"qamember.vue","sourceRoot":"src/views/qadata","sourcesContent":["<template>\n  <div>\n    <h1>人员配置</h1>\n    <a-tabs default-active-key=\"qa\" @change=\"callback\">\n      <a-tab-pane key=\"qa\" tab=\"测试人员配置\">\n        <a-table\n          :columns=\"columns\"\n          :data-source=\"qadata\"\n          style=\"margin-top: 20px\"\n          :loading=\"isLoading\"\n          :pagination=\"{ defaultPageSize: 100 }\"\n        >\n          <div slot=\"action\" slot-scope=\"text, record\">\n            <div>\n              <a-button type=\"primary\" @click=\"showModal(record.id, record.name, record.userType, record.orderId)\"\n                >编辑</a-button\n              >\n            </div>\n          </div>\n        </a-table>\n      </a-tab-pane>\n        <a-tab-pane key=\"rd\" tab=\"开发人员配置\" force-render>\n          <building></building>\n         </a-tab-pane>\n      </a-tabs>\n\n    <div>\n      <a-modal v-model=\"visible\" title=\"编辑\" @ok=\"handleOk\" :afterClose=\"onClose\">\n        <p>姓名: {{ modelname }}</p>\n        <p>权重: <a-input-number placeholder=\"权重\" style=\"width: 80px\" v-model=\"modelorder\" /></p>\n        <p>显示: <a-switch v-model=\"modeluserType\" @change=\"onChange\" /></p>\n      </a-modal>\n    </div>\n  </div>\n</template>\n<script>\nimport { axios } from '@/utils/request'\nimport { method } from 'lodash'\n\nconst columns = [\n  { title: 'id', width: 30, dataIndex: 'id', key: 'id' },\n  { title: '姓名', width: 30, dataIndex: 'name', key: 'name' },\n  { title: '权重', width: 30, dataIndex: 'orderId', key: 'orderId' },\n  { title: '列表显示', width: 30, dataIndex: 'userType', key: 'userType' },\n  {\n    title: '操作',\n    key: 'taskDetail',\n    width: 250,\n    scopedSlots: { customRender: 'action' },\n  },\n]\n\nimport building from '../building.vue'\n\nexport default {\n  //人员维护页面\n  name: 'member',\n  data() {\n    return {\n      columns,\n      qadata: [],\n      visible: false,\n      modelid: '',\n      modelorder: '',\n      modelname: '',\n      modeluserType: true,\n      tabkey:\"qa\"\n    }\n  },\n\n  methods: {\n    init() {\n      this.getmemberdata()\n    },\n    getmemberdata() {\n      this.isLoading = true\n      let params = new FormData()\n      params.append('Department', 'qa')\n      axios\n        .post('/queryEmployee', params, { headers: { 'Content-Type': 'multipart/form-data' } })\n        .then((response) => {\n          if (response.code === 200) {\n            this.isLoading = false\n            response.data.forEach((item) => {\n              if (item.userType === '1') {\n                item.userType = '是'\n              } else {\n                item.userType = '否'\n              }\n            })\n            this.qadata = response.data\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n\n    showModal(id, name, userType, order) {\n      this.modelid = id\n      this.modelname = name\n      this.modelorder = order\n      if (userType === '是') {\n        this.modeluserType = 1\n      } else {\n        this.modeluserType = 0\n      }\n\n      document.documentElement.style = ''\n      this.visible = true\n    },\n    handleOk() {\n      let params = new FormData()\n      params.append('id', this.modelid)\n      params.append('orderId', this.modelorder)\n      params.append('userType', Number(this.modeluserType))\n      axios\n        .post('/editEmployee', params, { headers: { 'Content-Type': 'multipart/form-data' } })\n        .then((response) => {\n          if (response.code === 200) {\n            this.$message.success('提交成功')\n            this.visible = false\n            this.init()\n          } else {\n            this.$message.error('提交失败')\n          }\n        })\n        .catch((error) => {\n          this.isLoading = false\n          this.$message.error('内网数据获取失败')\n        })\n    },\n    onClose() {\n      document.documentElement.style.overflowY = 'overlay'\n    },\n    onChange(checked) {\n      modeluserType = checked\n    },\n  },\n  computed: {},\n\n  components:{building},\n  created() {\n    this.init()\n  },\n}\n</script>\n\n<style scoped>\n</style>\n"]}]}